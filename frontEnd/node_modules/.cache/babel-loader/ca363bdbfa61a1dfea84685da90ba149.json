{"ast":null,"code":"import { useEffect } from \"react\";\n/**\n * This hook is used to pause the exit timeout if the user blurs the window\n * while a toast is visible and the autohide functionality is not disabled. If\n * this functionality is not added, messages and alerts might be missed by the\n * user since they minimized the browser or viewing something on a second\n * screen.\n *\n * @private\n */\n\nexport default function useWindowBlurPause(_a) {\n  var startTimer = _a.startTimer,\n      stopTimer = _a.stopTimer,\n      visible = _a.visible,\n      message = _a.message,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b;\n  useEffect(function () {\n    if (disabled || !visible || !message || message.disableAutohide) {\n      return;\n    }\n\n    var handleFocusEvent = function (event) {\n      if (event.type === \"focus\") {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    window.addEventListener(\"blur\", handleFocusEvent);\n    window.addEventListener(\"focus\", handleFocusEvent);\n    return function () {\n      window.removeEventListener(\"blur\", handleFocusEvent);\n      window.removeEventListener(\"focus\", handleFocusEvent);\n    };\n  }, [disabled, startTimer, stopTimer, visible, message]);\n}","map":{"version":3,"sources":["../src/useWindowBlurPause.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,OAA1B;AAYA;;;;;;;;;;AASA,eAAc,SAAU,kBAAV,CAA6B,EAA7B,EAMJ;MALR,UAAU,GAAA,EAAA,CAAA,U;MACV,SAAS,GAAA,EAAA,CAAA,S;MACT,OAAO,GAAA,EAAA,CAAA,O;MACP,OAAO,GAAA,EAAA,CAAA,O;MACP,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;AAEhB,EAAA,SAAS,CAAC,YAAA;AACR,QAAI,QAAQ,IAAI,CAAC,OAAb,IAAwB,CAAC,OAAzB,IAAoC,OAAO,CAAC,eAAhD,EAAiE;AAC/D;AACD;;AAED,QAAM,gBAAgB,GAAG,UAAC,KAAD,EAAa;AACpC,UAAI,KAAK,CAAC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,QAAA,UAAU;AACX,OAFD,MAEO;AACL,QAAA,SAAS;AACV;AACF,KAND;;AAQA,IAAA,MAAM,CAAC,gBAAP,CAAwB,MAAxB,EAAgC,gBAAhC;AACA,IAAA,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,gBAAjC;AACA,WAAO,YAAA;AACL,MAAA,MAAM,CAAC,mBAAP,CAA2B,MAA3B,EAAmC,gBAAnC;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,OAA3B,EAAoC,gBAApC;AACD,KAHD;AAID,GAnBQ,EAmBN,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,OAAlC,EAA2C,OAA3C,CAnBM,CAAT;AAoBD","sourceRoot":"","sourcesContent":["import { useEffect } from \"react\";\n/**\n * This hook is used to pause the exit timeout if the user blurs the window\n * while a toast is visible and the autohide functionality is not disabled. If\n * this functionality is not added, messages and alerts might be missed by the\n * user since they minimized the browser or viewing something on a second\n * screen.\n *\n * @private\n */\nexport default function useWindowBlurPause(_a) {\n    var startTimer = _a.startTimer, stopTimer = _a.stopTimer, visible = _a.visible, message = _a.message, _b = _a.disabled, disabled = _b === void 0 ? false : _b;\n    useEffect(function () {\n        if (disabled || !visible || !message || message.disableAutohide) {\n            return;\n        }\n        var handleFocusEvent = function (event) {\n            if (event.type === \"focus\") {\n                startTimer();\n            }\n            else {\n                stopTimer();\n            }\n        };\n        window.addEventListener(\"blur\", handleFocusEvent);\n        window.addEventListener(\"focus\", handleFocusEvent);\n        return function () {\n            window.removeEventListener(\"blur\", handleFocusEvent);\n            window.removeEventListener(\"focus\", handleFocusEvent);\n        };\n    }, [disabled, startTimer, stopTimer, visible, message]);\n}\n//# sourceMappingURL=useWindowBlurPause.js.map"]},"metadata":{},"sourceType":"module"}