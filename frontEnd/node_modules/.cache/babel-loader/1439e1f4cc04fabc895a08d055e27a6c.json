{"ast":null,"code":"import { useCallback, useState } from \"react\";\n/**\n * A hook that implements the base functionality for expanding different tree\n * items.\n *\n * @param defaultExpandedIds Either a list of tree item ids to be expanded by\n * default or a function that will return the list of tree item ids to be\n * expanded by default\n * @return An object containing props that can be passed to the `Tree` component\n * to handle the expansion state within the tree.\n */\n\nexport default function useTreeItemExpansion(defaultExpandedIds) {\n  var _a = useState(defaultExpandedIds),\n      expandedIds = _a[0],\n      setExpandedIds = _a[1];\n\n  var onItemExpansion = useCallback(function (itemId, expanded) {\n    setExpandedIds(function (expandedIds) {\n      var nextExpandedIds = expandedIds;\n      var i = expandedIds.indexOf(itemId);\n\n      if (i === -1 && expanded) {\n        nextExpandedIds = expandedIds.slice();\n        nextExpandedIds.push(itemId);\n      } else if (i !== -1 && !expanded) {\n        nextExpandedIds = expandedIds.slice();\n        nextExpandedIds.splice(i, 1);\n      }\n\n      return nextExpandedIds;\n    });\n  }, []);\n  var onMultiItemExpansion = useCallback(function (itemIds) {\n    setExpandedIds(itemIds);\n  }, []);\n  return {\n    expandedIds: expandedIds,\n    onItemExpansion: onItemExpansion,\n    onMultiItemExpansion: onMultiItemExpansion\n  };\n}","map":{"version":3,"sources":["../src/useTreeItemExpansion.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,EAAsB,QAAtB,QAAsC,OAAtC;AAIA;;;;;;;;;;;AAUA,eAAc,SAAU,oBAAV,CACZ,kBADY,EACyC;AAE/C,MAAA,EAAA,GAAgC,QAAQ,CAAC,kBAAD,CAAxC;AAAA,MAAC,WAAW,GAAA,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAc,cAAc,GAAA,EAAA,CAAA,CAAA,CAA5B;;AACN,MAAM,eAAe,GAAG,WAAW,CACjC,UAAC,MAAD,EAAqB,QAArB,EAAsC;AACpC,IAAA,cAAc,CAAC,UAAC,WAAD,EAAY;AACzB,UAAI,eAAe,GAAG,WAAtB;AACA,UAAM,CAAC,GAAG,WAAW,CAAC,OAAZ,CAAoB,MAApB,CAAV;;AACA,UAAI,CAAC,KAAK,CAAC,CAAP,IAAY,QAAhB,EAA0B;AACxB,QAAA,eAAe,GAAG,WAAW,CAAC,KAAZ,EAAlB;AACA,QAAA,eAAe,CAAC,IAAhB,CAAqB,MAArB;AACD,OAHD,MAGO,IAAI,CAAC,KAAK,CAAC,CAAP,IAAY,CAAC,QAAjB,EAA2B;AAChC,QAAA,eAAe,GAAG,WAAW,CAAC,KAAZ,EAAlB;AACA,QAAA,eAAe,CAAC,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B;AACD;;AAED,aAAO,eAAP;AACD,KAZa,CAAd;AAaD,GAfgC,EAgBjC,EAhBiC,CAAnC;AAmBA,MAAM,oBAAoB,GAAG,WAAW,CAAC,UAAC,OAAD,EAAqB;AAC5D,IAAA,cAAc,CAAC,OAAD,CAAd;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,SAAO;AACL,IAAA,WAAW,EAAA,WADN;AAEL,IAAA,eAAe,EAAA,eAFV;AAGL,IAAA,oBAAoB,EAAA;AAHf,GAAP;AAKD","sourceRoot":"","sourcesContent":["import { useCallback, useState } from \"react\";\n/**\n * A hook that implements the base functionality for expanding different tree\n * items.\n *\n * @param defaultExpandedIds Either a list of tree item ids to be expanded by\n * default or a function that will return the list of tree item ids to be\n * expanded by default\n * @return An object containing props that can be passed to the `Tree` component\n * to handle the expansion state within the tree.\n */\nexport default function useTreeItemExpansion(defaultExpandedIds) {\n    var _a = useState(defaultExpandedIds), expandedIds = _a[0], setExpandedIds = _a[1];\n    var onItemExpansion = useCallback(function (itemId, expanded) {\n        setExpandedIds(function (expandedIds) {\n            var nextExpandedIds = expandedIds;\n            var i = expandedIds.indexOf(itemId);\n            if (i === -1 && expanded) {\n                nextExpandedIds = expandedIds.slice();\n                nextExpandedIds.push(itemId);\n            }\n            else if (i !== -1 && !expanded) {\n                nextExpandedIds = expandedIds.slice();\n                nextExpandedIds.splice(i, 1);\n            }\n            return nextExpandedIds;\n        });\n    }, []);\n    var onMultiItemExpansion = useCallback(function (itemIds) {\n        setExpandedIds(itemIds);\n    }, []);\n    return {\n        expandedIds: expandedIds,\n        onItemExpansion: onItemExpansion,\n        onMultiItemExpansion: onMultiItemExpansion,\n    };\n}\n//# sourceMappingURL=useTreeItemExpansion.js.map"]},"metadata":{},"sourceType":"module"}