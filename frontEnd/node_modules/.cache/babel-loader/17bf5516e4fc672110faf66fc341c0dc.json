{"ast":null,"code":"import { useEffect } from \"react\";\nimport useToggle from \"../useToggle\";\n/**\n * A small hook for checking if the app is currently being interacted with by a\n * keyboard.\n *\n * @return true if the app is in keyboard mode\n * @private\n */\n\nexport default function useKeyboardDetection() {\n  var _a = useToggle(false),\n      enabled = _a[0],\n      enable = _a[1],\n      disable = _a[2];\n\n  useEffect(function () {\n    if (enabled) {\n      return;\n    }\n\n    window.addEventListener(\"keydown\", enable, true);\n    return function () {\n      window.removeEventListener(\"keydown\", enable, true);\n    };\n  }, [enabled, enable]);\n  useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n\n    window.addEventListener(\"mousedown\", disable, true);\n    window.addEventListener(\"touchstart\", disable, true);\n    return function () {\n      window.removeEventListener(\"mousedown\", disable, true);\n      window.removeEventListener(\"touchstart\", disable, true);\n    };\n  }, [enabled, disable]);\n  return enabled;\n}","map":{"version":3,"sources":["../../src/interaction/useKeyboardDetection.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,OAA1B;AAEA,OAAO,SAAP,MAAsB,cAAtB;AAEA;;;;;;;;AAOA,eAAc,SAAU,oBAAV,GAA8B;AACpC,MAAA,EAAA,GAA6B,SAAS,CAAC,KAAD,CAAtC;AAAA,MAAC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU,MAAM,GAAA,EAAA,CAAA,CAAA,CAAhB;AAAA,MAAkB,OAAO,GAAA,EAAA,CAAA,CAAA,CAAzB;;AAEN,EAAA,SAAS,CAAC,YAAA;AACR,QAAI,OAAJ,EAAa;AACX;AACD;;AAED,IAAA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,MAAnC,EAA2C,IAA3C;AAEA,WAAO,YAAA;AACL,MAAA,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,MAAtC,EAA8C,IAA9C;AACD,KAFD;AAGD,GAVQ,EAUN,CAAC,OAAD,EAAU,MAAV,CAVM,CAAT;AAYA,EAAA,SAAS,CAAC,YAAA;AACR,QAAI,CAAC,OAAL,EAAc;AACZ;AACD;;AAED,IAAA,MAAM,CAAC,gBAAP,CAAwB,WAAxB,EAAqC,OAArC,EAA8C,IAA9C;AACA,IAAA,MAAM,CAAC,gBAAP,CAAwB,YAAxB,EAAsC,OAAtC,EAA+C,IAA/C;AAEA,WAAO,YAAA;AACL,MAAA,MAAM,CAAC,mBAAP,CAA2B,WAA3B,EAAwC,OAAxC,EAAiD,IAAjD;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,YAA3B,EAAyC,OAAzC,EAAkD,IAAlD;AACD,KAHD;AAID,GAZQ,EAYN,CAAC,OAAD,EAAU,OAAV,CAZM,CAAT;AAcA,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import { useEffect } from \"react\";\nimport useToggle from \"../useToggle\";\n/**\n * A small hook for checking if the app is currently being interacted with by a\n * keyboard.\n *\n * @return true if the app is in keyboard mode\n * @private\n */\nexport default function useKeyboardDetection() {\n    var _a = useToggle(false), enabled = _a[0], enable = _a[1], disable = _a[2];\n    useEffect(function () {\n        if (enabled) {\n            return;\n        }\n        window.addEventListener(\"keydown\", enable, true);\n        return function () {\n            window.removeEventListener(\"keydown\", enable, true);\n        };\n    }, [enabled, enable]);\n    useEffect(function () {\n        if (!enabled) {\n            return;\n        }\n        window.addEventListener(\"mousedown\", disable, true);\n        window.addEventListener(\"touchstart\", disable, true);\n        return function () {\n            window.removeEventListener(\"mousedown\", disable, true);\n            window.removeEventListener(\"touchstart\", disable, true);\n        };\n    }, [enabled, disable]);\n    return enabled;\n}\n//# sourceMappingURL=useKeyboardDetection.js.map"]},"metadata":{},"sourceType":"module"}