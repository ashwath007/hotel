{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Shaji Project\\\\frontEnd\\\\src\\\\user\\\\AdminMenus\\\\AdminShajiDashMenuCreate.js\";\nimport React, { useState, useEffect } from 'react';\nimport { createaProduct, getallCategory } from './help/AddCategory';\nimport MenuBase from './MenuBase';\n\nconst AdminShajiDashMenuCreate = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = () => {\n    getCategories().then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    createaProduct(formData).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name\n        });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: createdProduct ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, createdProduct, \" created successfully\"));\n\n  const createProductForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Post photo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-block btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange(\"photo\"),\n    type: \"file\",\n    name: \"photo\",\n    accept: \"image\",\n    placeholder: \"choose a file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange(\"name\"),\n    name: \"photo\",\n    className: \"form-control\",\n    placeholder: \"Name\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleChange(\"description\"),\n    name: \"photo\",\n    className: \"form-control\",\n    placeholder: \"Description\",\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange(\"price\"),\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Price\",\n    value: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChange(\"category\"),\n    className: \"form-control\",\n    placeholder: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Select\"), categories && categories.map((cate, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: cate._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, cate.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange(\"stock\"),\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Stock\",\n    value: stock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: onSubmit,\n    className: \"btn btn-outline-success mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Create Product\"));\n\n  return /*#__PURE__*/React.createElement(MenuBase, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, createProductForm());\n}; //     const [values, setValues] = useState({\n//         name:\"\",\n//         formData:\"\",\n//         price:\"\",\n//         type:\"\",\n//         category:\"\",\n//         loading:false,\n//         error:\"\",\n//         categories:[],\n//         success:false,\n//         createdProduct:false\n//     })\n//     const {\n//       name,\n//       description,\n//       price,\n//       stock,\n//       type,\n//       categories,\n//       category,\n//       loading,\n//       error,\n//       success,\n//       createdProduct,\n//       getaRedirect,\n//       formData\n//     } = values;\n//     const handleChange = name => event => {\n//       const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//       formData.set(name, value);\n//       setValues({ ...values, [name]: value });\n//     };\n//     const createProductForm = () => (\n//       <form>\n//         <span>Post photo</span>\n//         <div className=\"form-group\">\n//           <label className=\"btn btn-block btn-success\">\n//             <input\n//               onChange={handleChange(\"photo\")}\n//               type=\"file\"\n//               name=\"photo\"\n//               accept=\"image\"\n//               placeholder=\"choose a file\"\n//             />\n//           </label>\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             onChange={handleChange(\"name\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Name\"\n//             value={name}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <textarea\n//             onChange={handleChange(\"description\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Description\"\n//             value={description}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             onChange={handleChange(\"price\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Price\"\n//             value={price}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <select\n//             onChange={handleChange(\"category\")}\n//             className=\"form-control\"\n//             placeholder=\"Category\"\n//           >\n//             <option>Select</option>\n//             {categories &&\n//               categories.map((cate, index) => (\n//                 <option key={index} value={cate._id}>\n//                   {cate.name}\n//                 </option>\n//               ))}\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             onChange={handleChange(\"stock\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Stock\"\n//             value={stock}\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           onClick={onSubmit}\n//           className=\"btn btn-outline-success mb-3\"\n//         >\n//           Create Product\n//         </button>\n//       </form>\n//     );\n//     const successMessage = () => (\n//         <div\n//           className=\"alert alert-success mt-3\"\n//           style={{ display: createdProduct ? \"\" : \"none\" }}\n//         >\n//           <h4>{createdProduct} created successfully</h4>\n//         </div>\n//       );\n//       const preloadCategories = () => {\n//         getallCategory().then(data => {\n//           if (data.error) {\n//             setValues({ ...values, error: data.error });\n//           } else {\n//             setValues({\n//               categories: data,\n//               formData: new FormData() \n//             });\n//           }\n//         });\n//       };\n//       useEffect(() => {\n//         preloadCategories()\n//       }, [])\n//       const onSubmit = event => {\n//         event.preventDefault();\n//         setValues({ ...values, error: \"\", loading: true });\n//         createaProduct( formData).then(data => {\n//           if (data.error) {\n//             setValues({ ...values, error: data.error });\n//           } else {\n//             console.log(data);\n//             setValues({\n//               ...values,\n//               name: \"\",\n//               description: \"\",\n//               price: \"\",\n//               photo: \"\",\n//               stock: \"\",\n//               loading: false,\n//               createdProduct: data.name\n//             });\n//           }\n//         });\n//       };\n//     return (\n//             <MenuBase>\n//                 <div className=\"container\">\n//                 <form>\n//                 <div class=\"form-group\">\n//                 <label>Name</label>\n//                 <input type=\"text\" onChange={handleChange(\"name\")} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Food name\"/>\n//                     </div>\n//                     <span>Food pic</span>\n//       <div className=\"form-group\">\n//         <label className=\"btn btn-block btn-success\">\n//           <input\n//             onChange={handleChange(\"photo\")}\n//             type=\"file\"\n//             name=\"photo\"\n//             accept=\"image\"\n//             placeholder=\"choose a file\"\n//           />\n//         </label>\n//       </div>\n//       <div class=\"form-group\">\n//     <label>Price in (INR)</label>\n//     <input value={price} onChange={handleChange(\"price\")} placeholder=\"Enter price per Item\"  type=\"number\" class=\"form-control\"/>\n//   </div>\n//   <div class=\"form-group\">\n//     <label for=\"exampleFormControlSelect1\">Type</label>\n//     <select value={type} onChange={handleChange(\"type\")} className=\"form-control\" id=\"exampleFormControlSelect1\">\n//       <option>Veg</option>\n//       <option>Non-Veg</option>\n//     </select>\n//   </div>\n//   <div className=\"form-group\">\n//         <select\n//           onChange={handleChange(\"category\")}\n//           className=\"form-control\"\n//           placeholder=\"Category\"\n//           value={category}\n//         >\n//           <option>Category</option>\n//           {categories &&\n//             categories.map((cate, index) => (\n//               <option key={index} value={cate._id}>\n//                 {cate.name}\n//               </option>\n//             ))}\n//         </select>\n//       </div>\n//       <br/>\n//       <button onClick={onSubmit} className=\"btn btn-warning btn-block rounded\">\n//         Create Menu \n//       </button>\n//                 </form>\n//                 </div>\n//             </MenuBase>\n//     )\n// }\n\n\nexport default AdminShajiDashMenuCreate;","map":{"version":3,"sources":["C:/Users/user/Desktop/Shaji Project/frontEnd/src/user/AdminMenus/AdminShajiDashMenuCreate.js"],"names":["React","useState","useEffect","createaProduct","getallCategory","MenuBase","AdminShajiDashMenuCreate","values","setValues","name","description","price","stock","photo","categories","category","loading","error","createdProduct","getaRedirect","formData","preload","getCategories","then","data","FormData","onSubmit","event","preventDefault","handleChange","value","target","files","set","successMessage","display","createProductForm","map","cate","index","_id"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { createaProduct, getallCategory } from './help/AddCategory'\r\nimport MenuBase from './MenuBase'\r\n\r\n\r\nconst AdminShajiDashMenuCreate = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\"\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData\r\n  } = values;\r\n\r\n  const preload = () => {\r\n    getCategories().then(data => {\r\n      //console.log(data);\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({ ...values, categories: data, formData: new FormData() });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    createaProduct( formData).then(data => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          description: \"\",\r\n          price: \"\",\r\n          photo: \"\",\r\n          stock: \"\",\r\n          loading: false,\r\n          createdProduct: data.name\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdProduct} created successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <MenuBase>\r\n      {createProductForm()}\r\n    </MenuBase>\r\n  );\r\n};\r\n\r\n//     const [values, setValues] = useState({\r\n//         name:\"\",\r\n//         formData:\"\",\r\n//         price:\"\",\r\n//         type:\"\",\r\n//         category:\"\",\r\n//         loading:false,\r\n//         error:\"\",\r\n//         categories:[],\r\n//         success:false,\r\n//         createdProduct:false\r\n//     })\r\n\r\n//     const {\r\n//       name,\r\n//       description,\r\n//       price,\r\n//       stock,\r\n//       type,\r\n//       categories,\r\n//       category,\r\n//       loading,\r\n//       error,\r\n//       success,\r\n//       createdProduct,\r\n//       getaRedirect,\r\n//       formData\r\n//     } = values;\r\n//     const handleChange = name => event => {\r\n//       const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n//       formData.set(name, value);\r\n//       setValues({ ...values, [name]: value });\r\n//     };\r\n//     const createProductForm = () => (\r\n//       <form>\r\n//         <span>Post photo</span>\r\n//         <div className=\"form-group\">\r\n//           <label className=\"btn btn-block btn-success\">\r\n//             <input\r\n//               onChange={handleChange(\"photo\")}\r\n//               type=\"file\"\r\n//               name=\"photo\"\r\n//               accept=\"image\"\r\n//               placeholder=\"choose a file\"\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             onChange={handleChange(\"name\")}\r\n//             name=\"photo\"\r\n//             className=\"form-control\"\r\n//             placeholder=\"Name\"\r\n//             value={name}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <textarea\r\n//             onChange={handleChange(\"description\")}\r\n//             name=\"photo\"\r\n//             className=\"form-control\"\r\n//             placeholder=\"Description\"\r\n//             value={description}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             onChange={handleChange(\"price\")}\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             placeholder=\"Price\"\r\n//             value={price}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <select\r\n//             onChange={handleChange(\"category\")}\r\n//             className=\"form-control\"\r\n//             placeholder=\"Category\"\r\n//           >\r\n//             <option>Select</option>\r\n//             {categories &&\r\n//               categories.map((cate, index) => (\r\n//                 <option key={index} value={cate._id}>\r\n//                   {cate.name}\r\n//                 </option>\r\n//               ))}\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             onChange={handleChange(\"stock\")}\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             placeholder=\"Stock\"\r\n//             value={stock}\r\n//           />\r\n//         </div>\r\n  \r\n//         <button\r\n//           type=\"submit\"\r\n//           onClick={onSubmit}\r\n//           className=\"btn btn-outline-success mb-3\"\r\n//         >\r\n//           Create Product\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//     const successMessage = () => (\r\n//         <div\r\n//           className=\"alert alert-success mt-3\"\r\n//           style={{ display: createdProduct ? \"\" : \"none\" }}\r\n//         >\r\n//           <h4>{createdProduct} created successfully</h4>\r\n//         </div>\r\n//       );\r\n\r\n//       const preloadCategories = () => {\r\n//         getallCategory().then(data => {\r\n//           if (data.error) {\r\n//             setValues({ ...values, error: data.error });\r\n//           } else {\r\n//             setValues({\r\n//               categories: data,\r\n//               formData: new FormData() \r\n//             });\r\n//           }\r\n//         });\r\n//       };\r\n\r\n//       useEffect(() => {\r\n//         preloadCategories()\r\n//       }, [])\r\n\r\n\r\n//       const onSubmit = event => {\r\n//         event.preventDefault();\r\n//         setValues({ ...values, error: \"\", loading: true });\r\n//         createaProduct( formData).then(data => {\r\n//           if (data.error) {\r\n//             setValues({ ...values, error: data.error });\r\n//           } else {\r\n//             console.log(data);\r\n//             setValues({\r\n//               ...values,\r\n//               name: \"\",\r\n//               description: \"\",\r\n//               price: \"\",\r\n//               photo: \"\",\r\n//               stock: \"\",\r\n//               loading: false,\r\n//               createdProduct: data.name\r\n//             });\r\n//           }\r\n//         });\r\n//       };\r\n\r\n\r\n\r\n//     return (\r\n//             <MenuBase>\r\n//                 <div className=\"container\">\r\n//                 <form>\r\n//                 <div class=\"form-group\">\r\n//                 <label>Name</label>\r\n//                 <input type=\"text\" onChange={handleChange(\"name\")} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Food name\"/>\r\n//                     </div>\r\n//                     <span>Food pic</span>\r\n//       <div className=\"form-group\">\r\n//         <label className=\"btn btn-block btn-success\">\r\n//           <input\r\n//             onChange={handleChange(\"photo\")}\r\n//             type=\"file\"\r\n//             name=\"photo\"\r\n//             accept=\"image\"\r\n//             placeholder=\"choose a file\"\r\n//           />\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div class=\"form-group\">\r\n//     <label>Price in (INR)</label>\r\n//     <input value={price} onChange={handleChange(\"price\")} placeholder=\"Enter price per Item\"  type=\"number\" class=\"form-control\"/>\r\n//   </div>\r\n//   <div class=\"form-group\">\r\n//     <label for=\"exampleFormControlSelect1\">Type</label>\r\n//     <select value={type} onChange={handleChange(\"type\")} className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n//       <option>Veg</option>\r\n//       <option>Non-Veg</option>\r\n      \r\n//     </select>\r\n//   </div>\r\n\r\n//   <div className=\"form-group\">\r\n//         <select\r\n//           onChange={handleChange(\"category\")}\r\n//           className=\"form-control\"\r\n//           placeholder=\"Category\"\r\n//           value={category}\r\n//         >\r\n//           <option>Category</option>\r\n//           {categories &&\r\n//             categories.map((cate, index) => (\r\n//               <option key={index} value={cate._id}>\r\n//                 {cate.name}\r\n//               </option>\r\n//             ))}\r\n//         </select>\r\n//       </div>\r\n//       <br/>\r\n//       <button onClick={onSubmit} className=\"btn btn-warning btn-block rounded\">\r\n//         Create Menu \r\n//       </button>\r\n  \r\n//                 </form>\r\n//                 </div>\r\n                \r\n//             </MenuBase>\r\n//     )\r\n// }\r\n\r\n\r\n\r\nexport default AdminShajiDashMenuCreate;"]},"metadata":{},"sourceType":"module"}