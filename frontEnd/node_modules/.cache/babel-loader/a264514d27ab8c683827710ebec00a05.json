{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-media-container\");\n/**\n * The `MediaContainer` component is used to make responsive images and videos\n * within your app. This component also allows for focing a specific aspect\n * ratio for these elements with both the `height` and `width` props are\n * provided.\n */\n\nvar MediaContainer = forwardRef(function MediaContainer(_a, ref) {\n  var className = _a.className,\n      height = _a.height,\n      width = _a.width,\n      children = _a.children,\n      _b = _a.auto,\n      auto = _b === void 0 ? true : _b,\n      _c = _a.fullWidth,\n      fullWidth = _c === void 0 ? false : _c,\n      props = __rest(_a, [\"className\", \"height\", \"width\", \"children\", \"auto\", \"fullWidth\"]);\n\n  var aspectRatio = height && width ? \"rmd-media-container--\" + width + \"-\" + height : \"\";\n  return React.createElement(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      auto: auto,\n      \"aspect-ratio\": aspectRatio,\n      \"full-width\": fullWidth\n    }), aspectRatio, className)\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    MediaContainer.propTypes = {\n      auto: PropTypes.bool,\n      height: PropTypes.number,\n      width: PropTypes.number,\n      fullWidth: PropTypes.bool,\n      className: PropTypes.string,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}\n\nexport default MediaContainer;","map":{"version":3,"sources":["../src/MediaContainer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkD,OAAlD;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAgCA,IAAM,KAAK,GAAG,GAAG,CAAC,qBAAD,CAAjB;AAEA;;;;;;;AAMA,IAAM,cAAc,GAAG,UAAU,CAG/B,SAAS,cAAT,CACA,EADA,EAUA,GAVA,EAUG;AARD,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,MAAM,GAAA,EAAA,CAAA,MADN;AAAA,MAEA,KAAK,GAAA,EAAA,CAAA,KAFL;AAAA,MAGA,QAAQ,GAAA,EAAA,CAAA,QAHR;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,IAJA;AAAA,MAIA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAJX;AAAA,MAKA,EAAA,GAAA,EAAA,CAAA,SALA;AAAA,MAKA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EALjB;AAAA,MAMG,KAAK,GAAA,MAAA,CAAA,EAAA,EAPV,CAAA,WAAA,EAAA,QAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,WAAA,CAOU,CANR;;AAUF,MAAM,WAAW,GACf,MAAM,IAAI,KAAV,GAAkB,0BAAwB,KAAxB,GAA6B,GAA7B,GAAiC,MAAnD,GAA8D,EADhE;AAGA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CACX,KAAK,CAAC;AACJ,MAAA,IAAI,EAAA,IADA;AAEJ,sBAAgB,WAFZ;AAGJ,oBAAc;AAHV,KAAD,CADM,EAMX,WANW,EAOX,SAPW;AAFJ,GADX,CAAA,EAaG,QAbH,CADF;AAiBD,CAnCgC,CAAjC;;AAqCA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,cAAc,CAAC,SAAf,GAA2B;AACzB,MAAA,IAAI,EAAE,SAAS,CAAC,IADS;AAEzB,MAAA,MAAM,EAAE,SAAS,CAAC,MAFO;AAGzB,MAAA,KAAK,EAAE,SAAS,CAAC,MAHQ;AAIzB,MAAA,SAAS,EAAE,SAAS,CAAC,IAJI;AAKzB,MAAA,SAAS,EAAE,SAAS,CAAC,MALI;AAMzB,MAAA,QAAQ,EAAE,SAAS,CAAC;AANK,KAA3B;AAQD,GAXD,CAWE,OAAO,CAAP,EAAU,CAAE;AACf;;AAED,eAAe,cAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-media-container\");\n/**\n * The `MediaContainer` component is used to make responsive images and videos\n * within your app. This component also allows for focing a specific aspect\n * ratio for these elements with both the `height` and `width` props are\n * provided.\n */\nvar MediaContainer = forwardRef(function MediaContainer(_a, ref) {\n    var className = _a.className, height = _a.height, width = _a.width, children = _a.children, _b = _a.auto, auto = _b === void 0 ? true : _b, _c = _a.fullWidth, fullWidth = _c === void 0 ? false : _c, props = __rest(_a, [\"className\", \"height\", \"width\", \"children\", \"auto\", \"fullWidth\"]);\n    var aspectRatio = height && width ? \"rmd-media-container--\" + width + \"-\" + height : \"\";\n    return (React.createElement(\"div\", __assign({}, props, { ref: ref, className: cn(block({\n            auto: auto,\n            \"aspect-ratio\": aspectRatio,\n            \"full-width\": fullWidth,\n        }), aspectRatio, className) }), children));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        MediaContainer.propTypes = {\n            auto: PropTypes.bool,\n            height: PropTypes.number,\n            width: PropTypes.number,\n            fullWidth: PropTypes.bool,\n            className: PropTypes.string,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\nexport default MediaContainer;\n//# sourceMappingURL=MediaContainer.js.map"]},"metadata":{},"sourceType":"module"}