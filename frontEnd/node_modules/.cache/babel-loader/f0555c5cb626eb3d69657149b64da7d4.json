{"ast":null,"code":"import React, { useMemo } from \"react\";\nimport { DEFAULT_TOOLTIP_DELAY } from \"./constants\";\nimport { HoverModeActions, HoverModeDelay, HoverModeEnabled, useTooltipHoverModeState } from \"./useTooltipHoverMode\";\n/**\n * This component is used so that tooltips can gain the \"hover mode\"\n * functionality in that once a tooltip has become visible by hover, all other\n * tooltips will become visible immediately until 3 seconds have passed.\n */\n\nfunction TooltipHoverModeConfig(_a) {\n  var _b = _a.defaultDelay,\n      defaultDelay = _b === void 0 ? DEFAULT_TOOLTIP_DELAY : _b,\n      _c = _a.delayTimeout,\n      delayTimeout = _c === void 0 ? DEFAULT_TOOLTIP_DELAY : _c,\n      _d = _a.enabled,\n      enabled = _d === void 0 ? true : _d,\n      children = _a.children;\n\n  var _e = useTooltipHoverModeState(defaultDelay, delayTimeout),\n      delay = _e.delay,\n      enable = _e.enable,\n      startDisableTimer = _e.startDisableTimer;\n\n  var actions = useMemo(function () {\n    return {\n      enable: enable,\n      startDisableTimer: startDisableTimer\n    };\n  }, [enable, startDisableTimer]);\n  return React.createElement(HoverModeDelay.Provider, {\n    value: delay\n  }, React.createElement(HoverModeActions.Provider, {\n    value: actions\n  }, React.createElement(HoverModeEnabled.Provider, {\n    value: enabled\n  }, children)));\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    TooltipHoverModeConfig.propTypes = {\n      enabled: PropTypes.bool,\n      delayTimeout: PropTypes.number,\n      defaultDelay: PropTypes.number,\n      children: PropTypes.node.isRequired\n    };\n  } catch (e) {}\n}\n\nexport default TooltipHoverModeConfig;","map":{"version":3,"sources":["../src/TooltipHoverModeConfig.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,IAAyC,OAAzC,QAAwD,OAAxD;AAEA,SAAS,qBAAT,QAAsC,aAAtC;AACA,SACE,gBADF,EAEE,cAFF,EAGE,gBAHF,EAIE,wBAJF,QAKO,uBALP;AAcA;;;;;;AAKA,SAAS,sBAAT,CAAgC,EAAhC,EAK8B;MAJ5B,EAAA,GAAA,EAAA,CAAA,Y;MAAA,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,qBAAH,GAAwB,E;MACpC,EAAA,GAAA,EAAA,CAAA,Y;MAAA,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,qBAAH,GAAwB,E;MACpC,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;MACd,QAAQ,GAAA,EAAA,CAAA,Q;;AAEF,MAAA,EAAA,GAAuC,wBAAwB,CACnE,YADmE,EAEnE,YAFmE,CAA/D;AAAA,MAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,MAAS,MAAM,GAAA,EAAA,CAAA,MAAf;AAAA,MAAiB,iBAAiB,GAAA,EAAA,CAAA,iBAAlC;;AAKN,MAAM,OAAO,GAAG,OAAO,CACrB,YAAA;AAAM,WAAC;AACL,MAAA,MAAM,EAAA,MADD;AAEL,MAAA,iBAAiB,EAAA;AAFZ,KAAD;AAGJ,GAJmB,EAKrB,CAAC,MAAD,EAAS,iBAAT,CALqB,CAAvB;AAQA,SACE,KAAA,CAAA,aAAA,CAAC,cAAc,CAAC,QAAhB,EAAwB;AAAC,IAAA,KAAK,EAAE;AAAR,GAAxB,EACE,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAlB,EAA0B;AAAC,IAAA,KAAK,EAAE;AAAR,GAA1B,EACE,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAlB,EAA0B;AAAC,IAAA,KAAK,EAAE;AAAR,GAA1B,EACG,QADH,CADF,CADF,CADF;AASD;;AAED,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,sBAAsB,CAAC,SAAvB,GAAmC;AACjC,MAAA,OAAO,EAAE,SAAS,CAAC,IADc;AAEjC,MAAA,YAAY,EAAE,SAAS,CAAC,MAFS;AAGjC,MAAA,YAAY,EAAE,SAAS,CAAC,MAHS;AAIjC,MAAA,QAAQ,EAAE,SAAS,CAAC,IAAV,CAAe;AAJQ,KAAnC;AAMD,GATD,CASE,OAAO,CAAP,EAAU,CAAE;AACf;;AAED,eAAe,sBAAf","sourceRoot":"","sourcesContent":["import React, { useMemo } from \"react\";\nimport { DEFAULT_TOOLTIP_DELAY } from \"./constants\";\nimport { HoverModeActions, HoverModeDelay, HoverModeEnabled, useTooltipHoverModeState, } from \"./useTooltipHoverMode\";\n/**\n * This component is used so that tooltips can gain the \"hover mode\"\n * functionality in that once a tooltip has become visible by hover, all other\n * tooltips will become visible immediately until 3 seconds have passed.\n */\nfunction TooltipHoverModeConfig(_a) {\n    var _b = _a.defaultDelay, defaultDelay = _b === void 0 ? DEFAULT_TOOLTIP_DELAY : _b, _c = _a.delayTimeout, delayTimeout = _c === void 0 ? DEFAULT_TOOLTIP_DELAY : _c, _d = _a.enabled, enabled = _d === void 0 ? true : _d, children = _a.children;\n    var _e = useTooltipHoverModeState(defaultDelay, delayTimeout), delay = _e.delay, enable = _e.enable, startDisableTimer = _e.startDisableTimer;\n    var actions = useMemo(function () { return ({\n        enable: enable,\n        startDisableTimer: startDisableTimer,\n    }); }, [enable, startDisableTimer]);\n    return (React.createElement(HoverModeDelay.Provider, { value: delay },\n        React.createElement(HoverModeActions.Provider, { value: actions },\n            React.createElement(HoverModeEnabled.Provider, { value: enabled }, children))));\n}\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        TooltipHoverModeConfig.propTypes = {\n            enabled: PropTypes.bool,\n            delayTimeout: PropTypes.number,\n            defaultDelay: PropTypes.number,\n            children: PropTypes.node.isRequired,\n        };\n    }\n    catch (e) { }\n}\nexport default TooltipHoverModeConfig;\n//# sourceMappingURL=TooltipHoverModeConfig.js.map"]},"metadata":{},"sourceType":"module"}