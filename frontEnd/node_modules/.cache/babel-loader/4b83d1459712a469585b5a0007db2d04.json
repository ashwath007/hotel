{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_TOAST_CLASSNAMES, DEFAULT_TOAST_TIMEOUT } from \"./constants\";\nvar block = bem(\"rmd-toast\");\n/**\n * This is a very low-level component that can be used to animate a new toast in\n * to a `Snackbar` as it is mainly just a wrapper of the `CSSTransition`\n * component. If you are using this component, it is generally recommended to\n * provide the `onEntered` callback as a function to start the hide visibility\n * timer and the `onExited` callback to remove the current toast from your\n * queue.\n */\n\nvar Toast = forwardRef(function Toast(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExit = _a.onExit,\n      onExiting = _a.onExiting,\n      onExited = _a.onExited,\n      _b = _a.timeout,\n      timeout = _b === void 0 ? DEFAULT_TOAST_TIMEOUT : _b,\n      _c = _a.classNames,\n      classNames = _c === void 0 ? DEFAULT_TOAST_CLASSNAMES : _c,\n      _d = _a.action,\n      action = _d === void 0 ? null : _d,\n      _e = _a.stacked,\n      stacked = _e === void 0 ? false : _e,\n      _f = _a.twoLines,\n      twoLines = _f === void 0 ? false : _f,\n      visible = _a.visible,\n      props = __rest(_a, [\"className\", \"children\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"timeout\", \"classNames\", \"action\", \"stacked\", \"twoLines\", \"visible\"]);\n\n  return React.createElement(CSSTransition, {\n    in: visible,\n    appear: true,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    timeout: timeout,\n    classNames: classNames,\n    mountOnEnter: true,\n    unmountOnExit: true\n  }, React.createElement(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      stacked: stacked,\n      padded: !action || twoLines,\n      \"two-lines\": twoLines,\n      action: action,\n      \"action-2\": action && twoLines\n    }), className)\n  }), React.createElement(\"span\", {\n    className: block(\"message\", {\n      action: action\n    })\n  }, children), action && React.createElement(\"span\", {\n    className: block(\"action\", {\n      stacked: stacked\n    })\n  }, action)));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Toast.propTypes = {\n      visible: PropTypes.bool.isRequired,\n      action: PropTypes.element,\n      stacked: PropTypes.bool,\n      twoLines: PropTypes.bool,\n      className: PropTypes.string,\n      classNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        appear: PropTypes.string,\n        appearActive: PropTypes.string,\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string,\n        exitDone: PropTypes.string\n      })]),\n      timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      children: PropTypes.node,\n      onEnter: PropTypes.func,\n      onEntering: PropTypes.func,\n      onEntered: PropTypes.func,\n      onExit: PropTypes.func,\n      onExiting: PropTypes.func,\n      onExited: PropTypes.func\n    };\n  } catch (e) {}\n}\n\nexport default Toast;","map":{"version":3,"sources":["../src/Toast.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_TOAST_CLASSNAMES, DEFAULT_TOAST_TIMEOUT } from \"./constants\";\nvar block = bem(\"rmd-toast\");\n/**\n * This is a very low-level component that can be used to animate a new toast in\n * to a `Snackbar` as it is mainly just a wrapper of the `CSSTransition`\n * component. If you are using this component, it is generally recommended to\n * provide the `onEntered` callback as a function to start the hide visibility\n * timer and the `onExited` callback to remove the current toast from your\n * queue.\n */\nvar Toast = forwardRef(function Toast(_a, ref) {\n    var className = _a.className, children = _a.children, onEnter = _a.onEnter, onEntering = _a.onEntering, onEntered = _a.onEntered, onExit = _a.onExit, onExiting = _a.onExiting, onExited = _a.onExited, _b = _a.timeout, timeout = _b === void 0 ? DEFAULT_TOAST_TIMEOUT : _b, _c = _a.classNames, classNames = _c === void 0 ? DEFAULT_TOAST_CLASSNAMES : _c, _d = _a.action, action = _d === void 0 ? null : _d, _e = _a.stacked, stacked = _e === void 0 ? false : _e, _f = _a.twoLines, twoLines = _f === void 0 ? false : _f, visible = _a.visible, props = __rest(_a, [\"className\", \"children\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"timeout\", \"classNames\", \"action\", \"stacked\", \"twoLines\", \"visible\"]);\n    return (React.createElement(CSSTransition, { in: visible, appear: true, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExit: onExit, onExiting: onExiting, onExited: onExited, timeout: timeout, classNames: classNames, mountOnEnter: true, unmountOnExit: true },\n        React.createElement(\"div\", __assign({}, props, { ref: ref, className: cn(block({\n                stacked: stacked,\n                padded: !action || twoLines,\n                \"two-lines\": twoLines,\n                action: action,\n                \"action-2\": action && twoLines,\n            }), className) }),\n            React.createElement(\"span\", { className: block(\"message\", { action: action }) }, children),\n            action && (React.createElement(\"span\", { className: block(\"action\", { stacked: stacked }) }, action)))));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Toast.propTypes = {\n            visible: PropTypes.bool.isRequired,\n            action: PropTypes.element,\n            stacked: PropTypes.bool,\n            twoLines: PropTypes.bool,\n            className: PropTypes.string,\n            classNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    appear: PropTypes.string,\n                    appearActive: PropTypes.string,\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                    exitDone: PropTypes.string,\n                }),\n            ]),\n            timeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            children: PropTypes.node,\n            onEnter: PropTypes.func,\n            onEntering: PropTypes.func,\n            onEntered: PropTypes.func,\n            onExit: PropTypes.func,\n            onExiting: PropTypes.func,\n            onExited: PropTypes.func,\n        };\n    }\n    catch (e) { }\n}\nexport default Toast;\n//# sourceMappingURL=Toast.js.map"]},"metadata":{},"sourceType":"module"}