{"ast":null,"code":"var warnedOnce = false;\n/**\n * A \"reasonable\" default implementation for the getItemValue prop on a tree\n * that will warn about items that are not keyboard searchable in non-production\n * environments.\n *\n * @private\n */\n\nexport default function defaultGetItemValue(item, valueKey) {\n  var result = item[valueKey];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var type = typeof result;\n\n    if (!warnedOnce && type !== \"string\" && type !== \"number\") {\n      warnedOnce = true;\n      /* eslint-disable no-console */\n\n      console.warn(\"Unable to extract a string or number from an item within the tree for the item:\");\n      console.warn(item);\n      console.warn(\"\");\n      console.warn(\"This will make the item unable to be searched by typing within the tree and should be fixed before pushing to production.\");\n      console.warn(new Error().stack);\n    }\n  }\n\n  return \"\" + result;\n}","map":{"version":3,"sources":["../src/defaultGetItemValue.ts"],"names":[],"mappings":"AAEA,IAAI,UAAU,GAAG,KAAjB;AAEA;;;;;;;;AAOA,eAAc,SAAU,mBAAV,CACZ,IADY,EAEZ,QAFY,EAEI;AAEhB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAD,CAAnB;;AACA,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAM,IAAI,GAAG,OAAO,MAApB;;AACA,QAAI,CAAC,UAAD,IAAe,IAAI,KAAK,QAAxB,IAAoC,IAAI,KAAK,QAAjD,EAA2D;AACzD,MAAA,UAAU,GAAG,IAAb;AACA;;AACA,MAAA,OAAO,CAAC,IAAR,CACE,iFADF;AAGA,MAAA,OAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,EAAb;AACA,MAAA,OAAO,CAAC,IAAR,CACE,2HADF;AAGA,MAAA,OAAO,CAAC,IAAR,CAAa,IAAI,KAAJ,GAAY,KAAzB;AACD;AACF;;AAED,SAAO,KAAG,MAAV;AACD","sourceRoot":"","sourcesContent":["var warnedOnce = false;\n/**\n * A \"reasonable\" default implementation for the getItemValue prop on a tree\n * that will warn about items that are not keyboard searchable in non-production\n * environments.\n *\n * @private\n */\nexport default function defaultGetItemValue(item, valueKey) {\n    var result = item[valueKey];\n    if (process.env.NODE_ENV !== \"production\") {\n        var type = typeof result;\n        if (!warnedOnce && type !== \"string\" && type !== \"number\") {\n            warnedOnce = true;\n            /* eslint-disable no-console */\n            console.warn(\"Unable to extract a string or number from an item within the tree for the item:\");\n            console.warn(item);\n            console.warn(\"\");\n            console.warn(\"This will make the item unable to be searched by typing within the tree and should be fixed before pushing to production.\");\n            console.warn(new Error().stack);\n        }\n    }\n    return \"\" + result;\n}\n//# sourceMappingURL=defaultGetItemValue.js.map"]},"metadata":{},"sourceType":"module"}