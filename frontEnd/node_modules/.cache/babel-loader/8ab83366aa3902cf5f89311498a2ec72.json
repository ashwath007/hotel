{"ast":null,"code":"import { usePreviousFocus, useFocusOnMount } from \"@react-md/utils\";\n/**\n * This is just a simple component that is used with the `Menu` component to\n * handle the initial focus on mount and re-focusing a previous element on\n * unmount.\n * @private\n */\n\nexport default function MenuEvents(_a) {\n  var menuRef = _a.menuRef,\n      cancelled = _a.cancelled,\n      defaultFocus = _a.defaultFocus;\n  usePreviousFocus(cancelled);\n  useFocusOnMount(menuRef, defaultFocus, false, true);\n  return null;\n}","map":{"version":3,"sources":["../src/MenuEvents.tsx"],"names":[],"mappings":"AACA,SAAS,gBAAT,EAA2B,eAA3B,QAAkD,iBAAlD;AAQA;;;;;;;AAMA,eAAc,SAAU,UAAV,CAAqB,EAArB,EAII;MAHhB,OAAO,GAAA,EAAA,CAAA,O;MACP,SAAS,GAAA,EAAA,CAAA,S;MACT,YAAY,GAAA,EAAA,CAAA,Y;AAEZ,EAAA,gBAAgB,CAAC,SAAD,CAAhB;AACA,EAAA,eAAe,CAAC,OAAD,EAAU,YAAV,EAAwB,KAAxB,EAA+B,IAA/B,CAAf;AACA,SAAO,IAAP;AACD","sourceRoot":"","sourcesContent":["import { usePreviousFocus, useFocusOnMount } from \"@react-md/utils\";\n/**\n * This is just a simple component that is used with the `Menu` component to\n * handle the initial focus on mount and re-focusing a previous element on\n * unmount.\n * @private\n */\nexport default function MenuEvents(_a) {\n    var menuRef = _a.menuRef, cancelled = _a.cancelled, defaultFocus = _a.defaultFocus;\n    usePreviousFocus(cancelled);\n    useFocusOnMount(menuRef, defaultFocus, false, true);\n    return null;\n}\n//# sourceMappingURL=MenuEvents.js.map"]},"metadata":{},"sourceType":"module"}