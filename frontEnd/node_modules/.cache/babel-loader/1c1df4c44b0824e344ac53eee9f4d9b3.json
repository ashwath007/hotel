{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport CardHeaderAddon from \"./CardHeaderAddon\";\nvar block = bem(\"rmd-card\");\n/**\n * The header for a `Card`. There should only be up to 1 `CardHeader` within a\n * card and normally contains the `CardTitle` and optionally `CardSubtitle`\n * components. There is also additional functionality built in to render items\n * before or after the main children with some additional spacing.\n */\n\nvar CardHeader = forwardRef(function CardHeader(_a, ref) {\n  var _b;\n\n  var _c = _a.align,\n      align = _c === void 0 ? \"center\" : _c,\n      className = _a.className,\n      contentClassName = _a.contentClassName,\n      children = _a.children,\n      beforeChildren = _a.beforeChildren,\n      afterChildren = _a.afterChildren,\n      props = __rest(_a, [\"align\", \"className\", \"contentClassName\", \"children\", \"beforeChildren\", \"afterChildren\"]);\n\n  return React.createElement(\"header\", __assign({}, props, {\n    ref: ref,\n    className: cn(block(\"header\", (_b = {}, _b[align] = align !== \"none\", _b)), className)\n  }), React.createElement(TextIconSpacing, {\n    icon: React.createElement(CardHeaderAddon, null, beforeChildren)\n  }, React.createElement(TextIconSpacing, {\n    icon: React.createElement(CardHeaderAddon, null, afterChildren),\n    iconAfter: true\n  }, React.createElement(\"span\", {\n    className: cn(block(\"header-content\"), contentClassName)\n  }, children))));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    CardHeader.propTypes = {\n      align: PropTypes.oneOf([\"top\", \"center\", \"bottom\", \"none\"]),\n      className: PropTypes.string,\n      beforeChildren: PropTypes.node,\n      afterChildren: PropTypes.node,\n      contentClassName: PropTypes.string,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}\n\nexport default CardHeader;","map":{"version":3,"sources":["../src/CardHeader.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAA6D,OAA7D;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,eAAT,QAAgC,gBAAhC;AACA,SAAS,GAAT,QAAoB,iBAApB;AAEA,OAAO,eAAP,MAA4B,mBAA5B;AAsCA,IAAM,KAAK,GAAG,GAAG,CAAC,UAAD,CAAjB;AAEA;;;;;;;AAMA,IAAM,UAAU,GAAG,UAAU,CAC3B,SAAS,UAAT,CACE,EADF,EAUE,GAVF,EAUK;;;AARD,MAAA,EAAA,GAAA,EAAA,CAAA,KAAA;AAAA,MAAA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,EAAhB;AAAA,MACA,SAAS,GAAA,EAAA,CAAA,SADT;AAAA,MAEA,gBAAgB,GAAA,EAAA,CAAA,gBAFhB;AAAA,MAGA,QAAQ,GAAA,EAAA,CAAA,QAHR;AAAA,MAIA,cAAc,GAAA,EAAA,CAAA,cAJd;AAAA,MAKA,aAAa,GAAA,EAAA,CAAA,aALb;AAAA,MAMG,KAAK,GAAA,MAAA,CAAA,EAAA,EAPV,CAAA,OAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,eAAA,CAOU,CANR;;AAUF,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CACX,KAAK,CAAC,QAAD,GAAS,EAAA,GAAA,EAAA,EACZ,EAAA,CAAC,KAAD,CAAA,GAAS,KAAK,KAAK,MADP,EAEZ,EAFG,EADM,EAIX,SAJW;AAFJ,GADX,CAAA,EAUE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,IAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EAAkB,cAAlB;AADQ,GAAhB,EAGE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,IAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EAAkB,aAAlB,CADQ;AAEd,IAAA,SAAS,EAAA;AAFK,GAAhB,EAIE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,gBAAD,CAAN,EAA0B,gBAA1B;AAAnB,GAAA,EACG,QADH,CAJF,CAHF,CAVF,CADF;AAyBD,CAtC0B,CAA7B;;AAyCA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,UAAU,CAAC,SAAX,GAAuB;AACrB,MAAA,KAAK,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,MAA5B,CAAhB,CADc;AAErB,MAAA,SAAS,EAAE,SAAS,CAAC,MAFA;AAGrB,MAAA,cAAc,EAAE,SAAS,CAAC,IAHL;AAIrB,MAAA,aAAa,EAAE,SAAS,CAAC,IAJJ;AAKrB,MAAA,gBAAgB,EAAE,SAAS,CAAC,MALP;AAMrB,MAAA,QAAQ,EAAE,SAAS,CAAC;AANC,KAAvB;AAQD,GAXD,CAWE,OAAO,CAAP,EAAU,CAAE;AACf;;AAED,eAAe,UAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport CardHeaderAddon from \"./CardHeaderAddon\";\nvar block = bem(\"rmd-card\");\n/**\n * The header for a `Card`. There should only be up to 1 `CardHeader` within a\n * card and normally contains the `CardTitle` and optionally `CardSubtitle`\n * components. There is also additional functionality built in to render items\n * before or after the main children with some additional spacing.\n */\nvar CardHeader = forwardRef(function CardHeader(_a, ref) {\n    var _b;\n    var _c = _a.align, align = _c === void 0 ? \"center\" : _c, className = _a.className, contentClassName = _a.contentClassName, children = _a.children, beforeChildren = _a.beforeChildren, afterChildren = _a.afterChildren, props = __rest(_a, [\"align\", \"className\", \"contentClassName\", \"children\", \"beforeChildren\", \"afterChildren\"]);\n    return (React.createElement(\"header\", __assign({}, props, { ref: ref, className: cn(block(\"header\", (_b = {},\n            _b[align] = align !== \"none\",\n            _b)), className) }),\n        React.createElement(TextIconSpacing, { icon: React.createElement(CardHeaderAddon, null, beforeChildren) },\n            React.createElement(TextIconSpacing, { icon: React.createElement(CardHeaderAddon, null, afterChildren), iconAfter: true },\n                React.createElement(\"span\", { className: cn(block(\"header-content\"), contentClassName) }, children)))));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        CardHeader.propTypes = {\n            align: PropTypes.oneOf([\"top\", \"center\", \"bottom\", \"none\"]),\n            className: PropTypes.string,\n            beforeChildren: PropTypes.node,\n            afterChildren: PropTypes.node,\n            contentClassName: PropTypes.string,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\nexport default CardHeader;\n//# sourceMappingURL=CardHeader.js.map"]},"metadata":{},"sourceType":"module"}