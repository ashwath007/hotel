{"ast":null,"code":"import { createContext, useContext } from \"react\";\nexport var DEFAULT_MESSAGE_QUEUE_TIMEOUT = 5000;\n/**\n * @private\n */\n\nexport var AddMessageContext = createContext(function () {\n  throw new Error(\"Attempted to create a message without initializing the MessageQueue component.\");\n});\n/**\n * @private\n */\n\nexport var MessageVisibilityContext = createContext(false);\n/**\n * This hook is used to add a message to the queue from anywhere in your app.\n * This should normally be used from click event handlers, but can also be\n * triggered with custom logic within components.\n */\n\nexport function useAddMessage() {\n  return useContext(AddMessageContext);\n}\n/**\n * Gets the current message visibility to provide to the toast.\n *\n * @private\n */\n\nexport function useMessageVisibility() {\n  return useContext(MessageVisibilityContext);\n}\n/**\n * @private\n */\n\nexport var MessageQueueActionsContext = createContext({\n  popMessage: function () {\n    throw new Error(\"Attempted to pop a message without initializing the MessageQueue component.\");\n  },\n  hideMessage: function () {\n    throw new Error(\"Attempted to hide a message within initializing the MessageQueue component.\");\n  },\n  startTimer: function () {\n    throw new Error(\"Attempted to start a message queue timer without initializing the MessageQueue component.\");\n  },\n  stopTimer: function () {\n    throw new Error(\"Attempted to stop a message queue timer without initializing the MessageQueue component.\");\n  },\n  restartTimer: function () {\n    throw new Error(\"Attempted to restart a message queue timer without initializing the MessageQueue component.\");\n  },\n  resetQueue: function () {\n    throw new Error(\"Attempted to reset the message queue timer without initializing the MessageQueue component.\");\n  }\n});\n/**\n * This hook exposes some of the lower level actions for handling a message\n * queue if advanced behavior is desired.\n */\n\nexport function useMessageQueueActions() {\n  // I don't know how to type the createContext for a generic\n  return useContext(MessageQueueActionsContext);\n}\n/**\n * @private\n */\n\nexport var MessageQueueContext = createContext([]);\n/**\n * This hook will allow you to get the current queue. This probably shouldn't be\n * used that much.\n */\n\nexport function useQueue() {\n  return useContext(MessageQueueContext);\n}","map":{"version":3,"sources":["../src/MessageQueueContext.tsx"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAAmC,UAAnC,QAAqD,OAArD;AAKA,OAAO,IAAM,6BAA6B,GAAG,IAAtC;AAgEP;;;;AAGA,OAAO,IAAM,iBAAiB,GAAG,aAAa,CAAsB,YAAA;AAClE,QAAM,IAAI,KAAJ,CACJ,gFADI,CAAN;AAGD,CAJ6C,CAAvC;AAMP;;;;AAGA,OAAO,IAAM,wBAAwB,GAAG,aAAa,CAAC,KAAD,CAA9C;AAEP;;;;;;AAKA,OAAM,SAAU,aAAV,GAAuB;AAG3B,SAAO,UAAU,CAAC,iBAAD,CAAjB;AACD;AAED;;;;;;AAKA,OAAM,SAAU,oBAAV,GAA8B;AAClC,SAAO,UAAU,CAAC,wBAAD,CAAjB;AACD;AAwDD;;;;AAGA,OAAO,IAAM,0BAA0B,GAAG,aAAa,CAErD;AACA,EAAA,UAAU,EAAA,YAAA;AACR,UAAM,IAAI,KAAJ,CACJ,6EADI,CAAN;AAGD,GALD;AAMA,EAAA,WAAW,EAAA,YAAA;AACT,UAAM,IAAI,KAAJ,CACJ,6EADI,CAAN;AAGD,GAVD;AAWA,EAAA,UAAU,EAAA,YAAA;AACR,UAAM,IAAI,KAAJ,CACJ,2FADI,CAAN;AAGD,GAfD;AAgBA,EAAA,SAAS,EAAA,YAAA;AACP,UAAM,IAAI,KAAJ,CACJ,0FADI,CAAN;AAGD,GApBD;AAqBA,EAAA,YAAY,EAAA,YAAA;AACV,UAAM,IAAI,KAAJ,CACJ,6FADI,CAAN;AAGD,GAzBD;AA0BA,EAAA,UAAU,EAAA,YAAA;AACR,UAAM,IAAI,KAAJ,CACJ,6FADI,CAAN;AAGD;AA9BD,CAFqD,CAAhD;AAmCP;;;;;AAIA,OAAM,SAAU,sBAAV,GAAgC;AAGpC;AACA,SAAO,UAAU,CAAC,0BAAD,CAAjB;AACD;AAED;;;;AAGA,OAAO,IAAM,mBAAmB,GAAG,aAAa,CAAY,EAAZ,CAAzC;AAEP;;;;;AAIA,OAAM,SAAU,QAAV,GAAkB;AACtB,SAAO,UAAU,CAAC,mBAAD,CAAjB;AACD","sourceRoot":"","sourcesContent":["import { createContext, useContext } from \"react\";\nexport var DEFAULT_MESSAGE_QUEUE_TIMEOUT = 5000;\n/**\n * @private\n */\nexport var AddMessageContext = createContext(function () {\n    throw new Error(\"Attempted to create a message without initializing the MessageQueue component.\");\n});\n/**\n * @private\n */\nexport var MessageVisibilityContext = createContext(false);\n/**\n * This hook is used to add a message to the queue from anywhere in your app.\n * This should normally be used from click event handlers, but can also be\n * triggered with custom logic within components.\n */\nexport function useAddMessage() {\n    return useContext(AddMessageContext);\n}\n/**\n * Gets the current message visibility to provide to the toast.\n *\n * @private\n */\nexport function useMessageVisibility() {\n    return useContext(MessageVisibilityContext);\n}\n/**\n * @private\n */\nexport var MessageQueueActionsContext = createContext({\n    popMessage: function () {\n        throw new Error(\"Attempted to pop a message without initializing the MessageQueue component.\");\n    },\n    hideMessage: function () {\n        throw new Error(\"Attempted to hide a message within initializing the MessageQueue component.\");\n    },\n    startTimer: function () {\n        throw new Error(\"Attempted to start a message queue timer without initializing the MessageQueue component.\");\n    },\n    stopTimer: function () {\n        throw new Error(\"Attempted to stop a message queue timer without initializing the MessageQueue component.\");\n    },\n    restartTimer: function () {\n        throw new Error(\"Attempted to restart a message queue timer without initializing the MessageQueue component.\");\n    },\n    resetQueue: function () {\n        throw new Error(\"Attempted to reset the message queue timer without initializing the MessageQueue component.\");\n    },\n});\n/**\n * This hook exposes some of the lower level actions for handling a message\n * queue if advanced behavior is desired.\n */\nexport function useMessageQueueActions() {\n    // I don't know how to type the createContext for a generic\n    return useContext(MessageQueueActionsContext);\n}\n/**\n * @private\n */\nexport var MessageQueueContext = createContext([]);\n/**\n * This hook will allow you to get the current queue. This probably shouldn't be\n * used that much.\n */\nexport function useQueue() {\n    return useContext(MessageQueueContext);\n}\n//# sourceMappingURL=MessageQueueContext.js.map"]},"metadata":{},"sourceType":"module"}