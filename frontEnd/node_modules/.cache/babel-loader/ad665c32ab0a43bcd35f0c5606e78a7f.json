{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/prop-types */\n\n\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * This component is used to dynamically add addons to the `CardHeader`\n * component. When no children are provided, nothing will be rendered.\n *\n * @private\n */\n\nvar CardHeaderAddon = function (_a) {\n  var className = _a.className,\n      children = _a.children,\n      props = __rest(_a, [\"className\", \"children\"]);\n\n  if (!children) {\n    return null;\n  }\n\n  return React.createElement(\"span\", __assign({}, props, {\n    className: cn(block(\"header-addon\"), className)\n  }), children);\n};\n\nexport default CardHeaderAddon;","map":{"version":3,"sources":["../src/CardHeaderAddon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,OAAO,KAAP,MAA0C,OAA1C;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAEA,IAAM,KAAK,GAAG,GAAG,CAAC,UAAD,CAAjB;AAEA;;;;;;;AAMA,IAAM,eAAe,GAAwC,UAAC,EAAD,EAI5D;AAHC,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,QAAQ,GAAA,EAAA,CAAA,QADR;AAAA,MAEG,KAAK,GAAA,MAAA,CAAA,EAAA,EAHoD,CAAA,WAAA,EAAA,UAAA,CAGpD,CAFR;;AAIA,MAAI,CAAC,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAU,KAAV,EAAe;AAAE,IAAA,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,cAAD,CAAN,EAAwB,SAAxB;AAAf,GAAf,CAAA,EACG,QADH,CADF;AAKD,CAdD;;AAgBA,eAAe,eAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * This component is used to dynamically add addons to the `CardHeader`\n * component. When no children are provided, nothing will be rendered.\n *\n * @private\n */\nvar CardHeaderAddon = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    if (!children) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({}, props, { className: cn(block(\"header-addon\"), className) }), children));\n};\nexport default CardHeaderAddon;\n//# sourceMappingURL=CardHeaderAddon.js.map"]},"metadata":{},"sourceType":"module"}