{"ast":null,"code":"/**\n * Rounds a number to the nearest step within a min/max range.\n *\n * @see https://stackoverflow.com/a/13635455\n * @param value The value to round to the nearest step\n * @param min The min value allowed\n * @param max The max value allowed\n * @param steps The number of steps in the min/max range\n * @return the value rounded to the nearest step in the min/max range\n */\nexport function nearest(value, min, max, steps) {\n  var range = max - min;\n  var rounded = Math.round((value - min) * steps / range) / steps;\n  var zeroToOne = Math.min(Math.max(rounded, 0), 1); // have to calculate the number of allowed decimal places since decimal\n  // precision gets weird:\n  // 0.28 * 100 === 28.000000000000004\n\n  var step = range / steps;\n  var decimals = Number.isInteger(step) ? range % steps : step.toString().split(\".\")[1].length;\n  return parseFloat((zeroToOne * range + min).toFixed(decimals));\n}","map":{"version":3,"sources":["../src/nearest.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUA,OAAM,SAAU,OAAV,CACJ,KADI,EAEJ,GAFI,EAGJ,GAHI,EAIJ,KAJI,EAIS;AAEb,MAAM,KAAK,GAAG,GAAG,GAAG,GAApB;AACA,MAAM,OAAO,GAAG,IAAI,CAAC,KAAL,CAAY,CAAC,KAAK,GAAG,GAAT,IAAgB,KAAjB,GAA0B,KAArC,IAA8C,KAA9D;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,CAAlB,CAAT,EAA+B,CAA/B,CAAlB,CAJa,CAMb;AACA;AACA;;AACA,MAAM,IAAI,GAAG,KAAK,GAAG,KAArB;AACA,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAP,CAAiB,IAAjB,IACb,KAAK,GAAG,KADK,GAEb,IAAI,CAAC,QAAL,GAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8B,MAFlC;AAIA,SAAO,UAAU,CAAC,CAAC,SAAS,GAAG,KAAZ,GAAoB,GAArB,EAA0B,OAA1B,CAAkC,QAAlC,CAAD,CAAjB;AACD","sourceRoot":"","sourcesContent":["/**\n * Rounds a number to the nearest step within a min/max range.\n *\n * @see https://stackoverflow.com/a/13635455\n * @param value The value to round to the nearest step\n * @param min The min value allowed\n * @param max The max value allowed\n * @param steps The number of steps in the min/max range\n * @return the value rounded to the nearest step in the min/max range\n */\nexport function nearest(value, min, max, steps) {\n    var range = max - min;\n    var rounded = Math.round(((value - min) * steps) / range) / steps;\n    var zeroToOne = Math.min(Math.max(rounded, 0), 1);\n    // have to calculate the number of allowed decimal places since decimal\n    // precision gets weird:\n    // 0.28 * 100 === 28.000000000000004\n    var step = range / steps;\n    var decimals = Number.isInteger(step)\n        ? range % steps\n        : step.toString().split(\".\")[1].length;\n    return parseFloat((zeroToOne * range + min).toFixed(decimals));\n}\n//# sourceMappingURL=nearest.js.map"]},"metadata":{},"sourceType":"module"}