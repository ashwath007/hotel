{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { TableConfigProvider, useTableConfig } from \"./config\";\nimport { StickyTableProvider } from \"./sticky\";\nvar block = bem(\"rmd-thead\");\n/**\n * Creates a `<thead>` element with some basic styles. This component will also\n * update the table configuration so that all the `TableCell` children will\n * automatically become `<th>` elements instead of the normal `<td>` as well as\n * disabling the hover effect and line wrapping. The hover effect and\n * line-wrapping can be re-enabled if desired through the `hoverable` and\n * `disableNoWrap` props.\n */\n\nvar TableHeader = forwardRef(function TableHeader(_a, ref) {\n  var className = _a.className,\n      _b = _a.hoverable,\n      hoverable = _b === void 0 ? false : _b,\n      propLineWrap = _a.lineWrap,\n      children = _a.children,\n      _c = _a.sticky,\n      sticky = _c === void 0 ? false : _c,\n      props = __rest(_a, [\"className\", \"hoverable\", \"lineWrap\", \"children\", \"sticky\"]); // update the table configuration with the custom overrides for the `<thead>`\n\n\n  var _d = useTableConfig({\n    lineWrap: propLineWrap,\n    disableHover: !hoverable\n  }),\n      hAlign = _d.hAlign,\n      vAlign = _d.vAlign,\n      lineWrap = _d.lineWrap,\n      disableHover = _d.disableHover,\n      disableBorders = _d.disableBorders;\n\n  var configuration = useMemo(function () {\n    return {\n      header: true,\n      hAlign: hAlign,\n      vAlign: vAlign,\n      lineWrap: lineWrap,\n      disableBorders: disableBorders,\n      disableHover: disableHover\n    };\n  }, [hAlign, vAlign, lineWrap, disableBorders, disableHover]);\n  return React.createElement(TableConfigProvider, {\n    value: configuration\n  }, React.createElement(\"thead\", __assign({}, props, {\n    ref: ref,\n    className: cn(block(), className)\n  }), React.createElement(StickyTableProvider, {\n    value: sticky\n  }, children)));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    TableHeader.propTypes = {\n      className: PropTypes.string,\n      lineWrap: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf([\"padded\"])]),\n      hoverable: PropTypes.bool,\n      sticky: PropTypes.bool,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}\n\nexport default TableHeader;","map":{"version":3,"sources":["../src/TableHeader.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { TableConfigProvider, useTableConfig } from \"./config\";\nimport { StickyTableProvider } from \"./sticky\";\nvar block = bem(\"rmd-thead\");\n/**\n * Creates a `<thead>` element with some basic styles. This component will also\n * update the table configuration so that all the `TableCell` children will\n * automatically become `<th>` elements instead of the normal `<td>` as well as\n * disabling the hover effect and line wrapping. The hover effect and\n * line-wrapping can be re-enabled if desired through the `hoverable` and\n * `disableNoWrap` props.\n */\nvar TableHeader = forwardRef(function TableHeader(_a, ref) {\n    var className = _a.className, _b = _a.hoverable, hoverable = _b === void 0 ? false : _b, propLineWrap = _a.lineWrap, children = _a.children, _c = _a.sticky, sticky = _c === void 0 ? false : _c, props = __rest(_a, [\"className\", \"hoverable\", \"lineWrap\", \"children\", \"sticky\"]);\n    // update the table configuration with the custom overrides for the `<thead>`\n    var _d = useTableConfig({\n        lineWrap: propLineWrap,\n        disableHover: !hoverable,\n    }), hAlign = _d.hAlign, vAlign = _d.vAlign, lineWrap = _d.lineWrap, disableHover = _d.disableHover, disableBorders = _d.disableBorders;\n    var configuration = useMemo(function () { return ({\n        header: true,\n        hAlign: hAlign,\n        vAlign: vAlign,\n        lineWrap: lineWrap,\n        disableBorders: disableBorders,\n        disableHover: disableHover,\n    }); }, [hAlign, vAlign, lineWrap, disableBorders, disableHover]);\n    return (React.createElement(TableConfigProvider, { value: configuration },\n        React.createElement(\"thead\", __assign({}, props, { ref: ref, className: cn(block(), className) }),\n            React.createElement(StickyTableProvider, { value: sticky }, children))));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        TableHeader.propTypes = {\n            className: PropTypes.string,\n            lineWrap: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.oneOf([\"padded\"]),\n            ]),\n            hoverable: PropTypes.bool,\n            sticky: PropTypes.bool,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\nexport default TableHeader;\n//# sourceMappingURL=TableHeader.js.map"]},"metadata":{},"sourceType":"module"}