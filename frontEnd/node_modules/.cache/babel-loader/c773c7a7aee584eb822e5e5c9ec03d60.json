{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_TOOLTIP_CLASSNAMES, DEFAULT_TOOLTIP_TIMEOUT } from \"./constants\";\nvar block = bem(\"rmd-tooltip\");\n/**\n * This is the base tooltip component that can only be used to render a tooltip\n * with an animation when the visibility changes. If this component is used, you\n * will need to manually add all the event listeners and triggers to change the\n * `visible` prop.\n */\n\nvar Tooltip = forwardRef(function Tooltip(_a, ref) {\n  var _b;\n\n  var className = _a.className,\n      _c = _a.classNames,\n      classNames = _c === void 0 ? DEFAULT_TOOLTIP_CLASSNAMES : _c,\n      visible = _a.visible,\n      _d = _a.timeout,\n      timeout = _d === void 0 ? DEFAULT_TOOLTIP_TIMEOUT : _d,\n      _e = _a.dense,\n      dense = _e === void 0 ? false : _e,\n      _f = _a.lineWrap,\n      lineWrap = _f === void 0 ? true : _f,\n      _g = _a.position,\n      position = _g === void 0 ? \"below\" : _g,\n      children = _a.children,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExit = _a.onExit,\n      onExiting = _a.onExiting,\n      onExited = _a.onExited,\n      _h = _a.mountOnEnter,\n      mountOnEnter = _h === void 0 ? true : _h,\n      _j = _a.unmountOnExit,\n      unmountOnExit = _j === void 0 ? true : _j,\n      props = __rest(_a, [\"className\", \"classNames\", \"visible\", \"timeout\", \"dense\", \"lineWrap\", \"position\", \"children\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\"]);\n\n  return React.createElement(CSSTransition, {\n    classNames: classNames,\n    in: visible,\n    timeout: timeout,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, React.createElement(\"span\", __assign({}, props, {\n    ref: ref,\n    role: \"tooltip\",\n    className: cn(block((_b = {\n      dense: dense,\n      \"line-wrap\": lineWrap,\n      \"dense-line-wrap\": dense && lineWrap\n    }, _b[position] = true, _b)), className)\n  }), children));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Tooltip.propTypes = {\n      id: PropTypes.string.isRequired,\n      style: PropTypes.object,\n      className: PropTypes.string,\n      children: PropTypes.node.isRequired,\n      dense: PropTypes.bool,\n      lineWrap: PropTypes.bool,\n      classNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        appear: PropTypes.string,\n        appearActive: PropTypes.string,\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string,\n        exitDone: PropTypes.string\n      })]),\n      timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      onEnter: PropTypes.func,\n      onEntering: PropTypes.func,\n      onEntered: PropTypes.func,\n      onExit: PropTypes.func,\n      onExiting: PropTypes.func,\n      onExited: PropTypes.func,\n      mountOnEnter: PropTypes.bool,\n      unmountOnExit: PropTypes.bool,\n      position: PropTypes.oneOf([\"above\", \"below\", \"left\", \"right\"]),\n      visible: PropTypes.bool.isRequired\n    };\n  } catch (e) {}\n}\n\nexport default Tooltip;","map":{"version":3,"sources":["../src/Tooltip.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_TOOLTIP_CLASSNAMES, DEFAULT_TOOLTIP_TIMEOUT, } from \"./constants\";\nvar block = bem(\"rmd-tooltip\");\n/**\n * This is the base tooltip component that can only be used to render a tooltip\n * with an animation when the visibility changes. If this component is used, you\n * will need to manually add all the event listeners and triggers to change the\n * `visible` prop.\n */\nvar Tooltip = forwardRef(function Tooltip(_a, ref) {\n    var _b;\n    var className = _a.className, _c = _a.classNames, classNames = _c === void 0 ? DEFAULT_TOOLTIP_CLASSNAMES : _c, visible = _a.visible, _d = _a.timeout, timeout = _d === void 0 ? DEFAULT_TOOLTIP_TIMEOUT : _d, _e = _a.dense, dense = _e === void 0 ? false : _e, _f = _a.lineWrap, lineWrap = _f === void 0 ? true : _f, _g = _a.position, position = _g === void 0 ? \"below\" : _g, children = _a.children, onEnter = _a.onEnter, onEntering = _a.onEntering, onEntered = _a.onEntered, onExit = _a.onExit, onExiting = _a.onExiting, onExited = _a.onExited, _h = _a.mountOnEnter, mountOnEnter = _h === void 0 ? true : _h, _j = _a.unmountOnExit, unmountOnExit = _j === void 0 ? true : _j, props = __rest(_a, [\"className\", \"classNames\", \"visible\", \"timeout\", \"dense\", \"lineWrap\", \"position\", \"children\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\"]);\n    return (React.createElement(CSSTransition, { classNames: classNames, in: visible, timeout: timeout, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExit: onExit, onExiting: onExiting, onExited: onExited, mountOnEnter: mountOnEnter, unmountOnExit: unmountOnExit },\n        React.createElement(\"span\", __assign({}, props, { ref: ref, role: \"tooltip\", className: cn(block((_b = {\n                    dense: dense,\n                    \"line-wrap\": lineWrap,\n                    \"dense-line-wrap\": dense && lineWrap\n                },\n                _b[position] = true,\n                _b)), className) }), children)));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Tooltip.propTypes = {\n            id: PropTypes.string.isRequired,\n            style: PropTypes.object,\n            className: PropTypes.string,\n            children: PropTypes.node.isRequired,\n            dense: PropTypes.bool,\n            lineWrap: PropTypes.bool,\n            classNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    appear: PropTypes.string,\n                    appearActive: PropTypes.string,\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                    exitDone: PropTypes.string,\n                }),\n            ]),\n            timeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            onEnter: PropTypes.func,\n            onEntering: PropTypes.func,\n            onEntered: PropTypes.func,\n            onExit: PropTypes.func,\n            onExiting: PropTypes.func,\n            onExited: PropTypes.func,\n            mountOnEnter: PropTypes.bool,\n            unmountOnExit: PropTypes.bool,\n            position: PropTypes.oneOf([\"above\", \"below\", \"left\", \"right\"]),\n            visible: PropTypes.bool.isRequired,\n        };\n    }\n    catch (e) { }\n}\nexport default Tooltip;\n//# sourceMappingURL=Tooltip.js.map"]},"metadata":{},"sourceType":"module"}