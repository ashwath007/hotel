{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * The `Cardtitle` component should normally be used within the `CardHeader` to\n * create a nicely styled `<h5>` title for your card. This can also be used\n * along with the `CardSubtitle` component within the `CardHeader` for a main\n * title and a subtitle.\n */\n\nvar CardTitle = forwardRef(function CardTitle(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a.small,\n      small = _b === void 0 ? false : _b,\n      _c = _a.noWrap,\n      noWrap = _c === void 0 ? false : _c,\n      props = __rest(_a, [\"className\", \"children\", \"small\", \"noWrap\"]);\n\n  return React.createElement(\"h5\", __assign({}, props, {\n    ref: ref,\n    className: cn(block(\"title\", {\n      small: small\n    }), {\n      \"rmd-card--no-wrap\": noWrap\n    }, className)\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    CardTitle.propTypes = {\n      small: PropTypes.bool,\n      noWrap: PropTypes.bool,\n      className: PropTypes.string,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}\n\nexport default CardTitle;","map":{"version":3,"sources":["../src/CardTitle.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkD,OAAlD;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAiBA,IAAM,KAAK,GAAG,GAAG,CAAC,UAAD,CAAjB;AAEA;;;;;;;AAMA,IAAM,SAAS,GAAG,UAAU,CAC1B,SAAS,SAAT,CACE,EADF,EAEE,GAFF,EAEK;AADD,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MAAW,QAAQ,GAAA,EAAA,CAAA,QAAnB;AAAA,MAAqB,EAAA,GAAA,EAAA,CAAA,KAArB;AAAA,MAAqB,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAlC;AAAA,MAAoC,EAAA,GAAA,EAAA,CAAA,MAApC;AAAA,MAAoC,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAlD;AAAA,MAAuD,KAAK,GAAA,MAAA,CAAA,EAAA,EAA9D,CAAA,WAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,CAA8D,CAA5D;;AAGF,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CACX,KAAK,CAAC,OAAD,EAAU;AAAE,MAAA,KAAK,EAAA;AAAP,KAAV,CADM,EAEX;AACE,2BAAqB;AADvB,KAFW,EAKX,SALW;AAFJ,GADX,CAAA,EAWG,QAXH,CADF;AAeD,CApByB,CAA5B;;AAuBA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,SAAS,CAAC,SAAV,GAAsB;AACpB,MAAA,KAAK,EAAE,SAAS,CAAC,IADG;AAEpB,MAAA,MAAM,EAAE,SAAS,CAAC,IAFE;AAGpB,MAAA,SAAS,EAAE,SAAS,CAAC,MAHD;AAIpB,MAAA,QAAQ,EAAE,SAAS,CAAC;AAJA,KAAtB;AAMD,GATD,CASE,OAAO,CAAP,EAAU,CAAE;AACf;;AAED,eAAe,SAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * The `Cardtitle` component should normally be used within the `CardHeader` to\n * create a nicely styled `<h5>` title for your card. This can also be used\n * along with the `CardSubtitle` component within the `CardHeader` for a main\n * title and a subtitle.\n */\nvar CardTitle = forwardRef(function CardTitle(_a, ref) {\n    var className = _a.className, children = _a.children, _b = _a.small, small = _b === void 0 ? false : _b, _c = _a.noWrap, noWrap = _c === void 0 ? false : _c, props = __rest(_a, [\"className\", \"children\", \"small\", \"noWrap\"]);\n    return (React.createElement(\"h5\", __assign({}, props, { ref: ref, className: cn(block(\"title\", { small: small }), {\n            \"rmd-card--no-wrap\": noWrap,\n        }, className) }), children));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        CardTitle.propTypes = {\n            small: PropTypes.bool,\n            noWrap: PropTypes.bool,\n            className: PropTypes.string,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\nexport default CardTitle;\n//# sourceMappingURL=CardTitle.js.map"]},"metadata":{},"sourceType":"module"}