{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { createContext, isValidElement, useCallback, useContext, useMemo, useState } from \"react\";\nvar context = createContext({\n  tabsId: \"tabs\",\n  activeIndex: 0,\n  onActiveIndexChange: function () {},\n  tabs: []\n});\n/**\n * This hook returns the current \"state\" for the tabs which can be useful if you\n * need additional control or access to the tabs behavior.\n */\n\nexport function useTabs() {\n  return useContext(context);\n}\nvar Provider = context.Provider;\n/**\n * The `TabsManager` is used to configure your `Tabs` component and handle some\n * of the default behavior such as:\n *\n * - controlling the `activeIndex`\n * - general tab configuration\n * - callbacks when the tab has changed\n * - providing an `id` prefix for all tabs for simplicity\n */\n\nexport function TabsManager(_a) {\n  var tabsId = _a.tabsId,\n      _b = _a.defaultActiveIndex,\n      defaultActiveIndex = _b === void 0 ? 0 : _b,\n      propActiveIndex = _a.activeIndex,\n      onActiveIndexChange = _a.onActiveIndexChange,\n      tabs = _a.tabs,\n      _c = _a.stacked,\n      stacked = _c === void 0 ? false : _c,\n      _d = _a.iconAfter,\n      iconAfter = _d === void 0 ? false : _d,\n      children = _a.children;\n\n  var _e = useState(defaultActiveIndex),\n      localActiveIndex = _e[0],\n      setActiveIndex = _e[1];\n\n  var handleActiveIndexChange = useCallback(function (activeIndex) {\n    if (onActiveIndexChange) {\n      onActiveIndexChange(activeIndex);\n    }\n\n    setActiveIndex(activeIndex);\n  }, [onActiveIndexChange]);\n  var activeIndex = typeof propActiveIndex === \"number\" ? propActiveIndex : localActiveIndex;\n  var updateActiveIndex = typeof propActiveIndex === \"number\" ? onActiveIndexChange : handleActiveIndexChange;\n  var value = useMemo(function () {\n    return {\n      activeIndex: activeIndex,\n      onActiveIndexChange: updateActiveIndex,\n      tabs: tabs.map(function (config, i) {\n        var tab;\n\n        if (typeof config === \"string\" || isValidElement(config)) {\n          tab = {\n            children: config\n          };\n        } else {\n          tab = config;\n        }\n\n        return __assign(__assign({}, tab), {\n          id: tab.id || tabsId + \"-tab-\" + (i + 1),\n          panelId: activeIndex === i ? tabsId + \"-panel-\" + (activeIndex + 1) : undefined,\n          stacked: typeof tab.stacked === \"boolean\" ? tab.stacked : stacked,\n          iconAfter: typeof tab.iconAfter === \"boolean\" ? tab.iconAfter : iconAfter\n        });\n      }),\n      tabsId: tabsId\n    };\n  }, [activeIndex, iconAfter, stacked, tabs, tabsId, updateActiveIndex]);\n  return React.createElement(Provider, {\n    value: value\n  }, children);\n}","map":{"version":3,"sources":["../src/TabsManager.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { createContext, isValidElement, useCallback, useContext, useMemo, useState, } from \"react\";\nvar context = createContext({\n    tabsId: \"tabs\",\n    activeIndex: 0,\n    onActiveIndexChange: function () { },\n    tabs: [],\n});\n/**\n * This hook returns the current \"state\" for the tabs which can be useful if you\n * need additional control or access to the tabs behavior.\n */\nexport function useTabs() {\n    return useContext(context);\n}\nvar Provider = context.Provider;\n/**\n * The `TabsManager` is used to configure your `Tabs` component and handle some\n * of the default behavior such as:\n *\n * - controlling the `activeIndex`\n * - general tab configuration\n * - callbacks when the tab has changed\n * - providing an `id` prefix for all tabs for simplicity\n */\nexport function TabsManager(_a) {\n    var tabsId = _a.tabsId, _b = _a.defaultActiveIndex, defaultActiveIndex = _b === void 0 ? 0 : _b, propActiveIndex = _a.activeIndex, onActiveIndexChange = _a.onActiveIndexChange, tabs = _a.tabs, _c = _a.stacked, stacked = _c === void 0 ? false : _c, _d = _a.iconAfter, iconAfter = _d === void 0 ? false : _d, children = _a.children;\n    var _e = useState(defaultActiveIndex), localActiveIndex = _e[0], setActiveIndex = _e[1];\n    var handleActiveIndexChange = useCallback(function (activeIndex) {\n        if (onActiveIndexChange) {\n            onActiveIndexChange(activeIndex);\n        }\n        setActiveIndex(activeIndex);\n    }, [onActiveIndexChange]);\n    var activeIndex = typeof propActiveIndex === \"number\" ? propActiveIndex : localActiveIndex;\n    var updateActiveIndex = typeof propActiveIndex === \"number\"\n        ? onActiveIndexChange\n        : handleActiveIndexChange;\n    var value = useMemo(function () { return ({\n        activeIndex: activeIndex,\n        onActiveIndexChange: updateActiveIndex,\n        tabs: tabs.map(function (config, i) {\n            var tab;\n            if (typeof config === \"string\" || isValidElement(config)) {\n                tab = { children: config };\n            }\n            else {\n                tab = config;\n            }\n            return __assign(__assign({}, tab), { id: tab.id || tabsId + \"-tab-\" + (i + 1), panelId: activeIndex === i\n                    ? tabsId + \"-panel-\" + (activeIndex + 1)\n                    : undefined, stacked: typeof tab.stacked === \"boolean\" ? tab.stacked : stacked, iconAfter: typeof tab.iconAfter === \"boolean\" ? tab.iconAfter : iconAfter });\n        }),\n        tabsId: tabsId,\n    }); }, [activeIndex, iconAfter, stacked, tabs, tabsId, updateActiveIndex]);\n    return React.createElement(Provider, { value: value }, children);\n}\n//# sourceMappingURL=TabsManager.js.map"]},"metadata":{},"sourceType":"module"}