{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef, useCallback, useState, useRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem, useEnsuredRef, useResizeObserver } from \"@react-md/utils\";\nimport FloatingLabel from \"../label/FloatingLabel\";\nimport useFocusState from \"../useFocusState\";\nimport TextFieldContainer from \"./TextFieldContainer\";\nimport useValuedState from \"./useValuedState\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nvar block = bem(\"rmd-textarea\");\nvar container = bem(\"rmd-textarea-container\");\nvar PADDING_VARIABLES = \"var(--rmd-form-text-padding-top, 0px) + var(--rmd-form-textarea-padding, 0px)\"; // this is the default of 1.5rem line-height in the styles\n\nvar DEFAULT_LINE_HEIGHT = \"24\";\nvar TextArea = forwardRef(function TextArea(_a, forwardedRef) {\n  var style = _a.style,\n      className = _a.className,\n      areaStyle = _a.areaStyle,\n      areaClassName = _a.areaClassName,\n      containerRef = _a.containerRef,\n      label = _a.label,\n      labelStyle = _a.labelStyle,\n      labelClassName = _a.labelClassName,\n      _b = _a.rows,\n      rows = _b === void 0 ? 2 : _b,\n      _c = _a.maxRows,\n      maxRows = _c === void 0 ? -1 : _c,\n      _d = _a.resize,\n      resize = _d === void 0 ? \"auto\" : _d,\n      propTheme = _a.theme,\n      _e = _a.dense,\n      dense = _e === void 0 ? false : _e,\n      _f = _a.inline,\n      propInline = _f === void 0 ? false : _f,\n      _g = _a.error,\n      error = _g === void 0 ? false : _g,\n      _h = _a.disabled,\n      disabled = _h === void 0 ? false : _h,\n      _j = _a.animate,\n      animate = _j === void 0 ? true : _j,\n      _k = _a.isLeftAddon,\n      isLeftAddon = _k === void 0 ? true : _k,\n      _l = _a.isRightAddon,\n      isRightAddon = _l === void 0 ? true : _l,\n      propUnderlineDirection = _a.underlineDirection,\n      propOnBlur = _a.onBlur,\n      propOnFocus = _a.onFocus,\n      propOnChange = _a.onChange,\n      leftChildren = _a.leftChildren,\n      rightChildren = _a.rightChildren,\n      props = __rest(_a, [\"style\", \"className\", \"areaStyle\", \"areaClassName\", \"containerRef\", \"label\", \"labelStyle\", \"labelClassName\", \"rows\", \"maxRows\", \"resize\", \"theme\", \"dense\", \"inline\", \"error\", \"disabled\", \"animate\", \"isLeftAddon\", \"isRightAddon\", \"underlineDirection\", \"onBlur\", \"onFocus\", \"onChange\", \"leftChildren\", \"rightChildren\"]);\n\n  var id = props.id,\n      value = props.value,\n      defaultValue = props.defaultValue;\n\n  var _m = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection\n  }),\n      theme = _m.theme,\n      underlineDirection = _m.underlineDirection;\n\n  var _o = useFocusState({\n    onBlur: propOnBlur,\n    onFocus: propOnFocus\n  }),\n      focused = _o[0],\n      onFocus = _o[1],\n      onBlur = _o[2];\n\n  var _p = useState(),\n      height = _p[0],\n      setHeight = _p[1];\n\n  if (resize !== \"auto\" && typeof height === \"number\") {\n    setHeight(undefined);\n  }\n\n  var maskRef = useRef(null);\n\n  var _q = useState(false),\n      scrollable = _q[0],\n      setScrollable = _q[1];\n\n  var updateHeight = useCallback(function () {\n    var mask = maskRef.current;\n\n    if (!mask) {\n      return;\n    }\n\n    var nextHeight = mask.scrollHeight;\n\n    if (maxRows > 0) {\n      var lineHeight = parseFloat(window.getComputedStyle(mask).lineHeight || DEFAULT_LINE_HEIGHT);\n      var maxHeight = maxRows * lineHeight;\n      nextHeight = Math.min(maxHeight, nextHeight); // only want the textarea to be scrollable if there's a limit on the rows\n      // since it'll flash the scrollbar on most OS during the height transition\n\n      if (nextHeight === maxHeight && !scrollable) {\n        setScrollable(true);\n      } else if (nextHeight !== maxHeight && scrollable) {\n        setScrollable(false);\n      }\n    }\n\n    if (height !== nextHeight) {\n      setHeight(nextHeight);\n    }\n  }, [height, maxRows, scrollable]); // the window can be resized while there is text inside the textarea so need to\n  // recalculate the height when the width changes as well.\n\n  var _r = useResizeObserver(updateHeight, {\n    ref: maskRef,\n    disableHeight: true\n  }),\n      maskRefHandler = _r[1];\n\n  var _s = useValuedState({\n    value: value,\n    defaultValue: defaultValue,\n    onChange: function (event) {\n      var mask = maskRef.current;\n\n      if (propOnChange) {\n        propOnChange(event);\n      }\n\n      if (!mask || resize !== \"auto\") {\n        return;\n      } // to get the height transition to work, you have to set the height on:\n      // - the main container element (including padding) that has the height\n      //    transition enabled\n      // - a child div wrapper (without padding) that has the height transition\n      //    enabled\n      // - the textarea element (without padding) and without a height transition\n      //\n      // if it isn't done this way, the height transition will look weird since\n      // the text will be fixed to the bottom of the area and more text at the top\n      // will become visible as the height transition completes. applying the\n      // transition on the two parent elements work because:\n      // - the height is set immediately on the text field so it expands to show all\n      //    the text\n      // - the height is correctly applied to both parent elements, but their height\n      //    haven't fully been adjusted due to the animation\n      // - the parent divs have overflow visible by default, so the textarea's text\n      //    will expand past the boundaries of the divs and not cause the upwards\n      //    animation weirdness.\n\n\n      mask.value = event.currentTarget.value;\n      updateHeight();\n    }\n  }),\n      valued = _s[0],\n      onChange = _s[1];\n\n  var _t = useEnsuredRef(forwardedRef),\n      ref = _t[0],\n      refHandler = _t[1]; // the container element adds some padding so that the content can scroll and\n  // not be covered by the floating label. unfortunately, this means that the entire\n  // container is no longer clickable to focus the input. This is used to add that\n  // functionality back.\n\n\n  var handleClick = useCallback(function (event) {\n    if (ref.current && event.target === event.currentTarget) {\n      ref.current.focus();\n    }\n  }, [ref]);\n  var area = React.createElement(\"textarea\", __assign({}, props, {\n    ref: refHandler,\n    rows: rows,\n    disabled: disabled,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: onChange,\n    style: __assign(__assign({}, areaStyle), {\n      height: height\n    }),\n    className: cn(block({\n      scrollable: scrollable || resize === \"none\",\n      floating: label && theme !== \"none\",\n      rh: resize === \"horizontal\",\n      rv: resize === \"vertical\",\n      rn: resize === \"auto\" || resize === \"none\"\n    }), areaClassName)\n  }));\n  var children = area;\n\n  if (resize === \"auto\") {\n    children = React.createElement(\"div\", {\n      style: {\n        height: height\n      },\n      className: container(\"inner\", {\n        animate: animate\n      })\n    }, area, React.createElement(\"textarea\", {\n      \"aria-hidden\": true,\n      defaultValue: value || defaultValue,\n      id: id + \"-mask\",\n      ref: maskRefHandler,\n      readOnly: true,\n      rows: rows,\n      tabIndex: -1,\n      style: areaStyle,\n      className: cn(block({\n        rn: true,\n        mask: true,\n        floating: label && theme !== \"none\"\n      }), areaClassName)\n    }));\n  }\n\n  var inline = propInline;\n\n  if (resize === \"horizontal\" || resize === \"both\") {\n    // have to force it inline or else you won't be able to resize\n    // it horizontally.\n    inline = true;\n  }\n\n  return React.createElement(TextFieldContainer, {\n    style: __assign(__assign({}, style), {\n      height: height ? \"calc(\" + PADDING_VARIABLES + \" + \" + height + \"px)\" : undefined\n    }),\n    className: cn(container({\n      animate: animate && resize === \"auto\",\n      cursor: !disabled\n    }), className),\n    ref: containerRef,\n    theme: theme,\n    error: error,\n    active: focused,\n    label: !!label,\n    dense: dense,\n    inline: inline,\n    disabled: disabled,\n    isLeftAddon: isLeftAddon,\n    isRightAddon: isRightAddon,\n    leftChildren: leftChildren,\n    rightChildren: rightChildren,\n    underlineDirection: underlineDirection,\n    onClick: !disabled ? handleClick : undefined\n  }, React.createElement(FloatingLabel, {\n    style: labelStyle,\n    className: labelClassName,\n    htmlFor: id,\n    error: error,\n    active: focused,\n    floating: focused || valued,\n    valued: valued,\n    dense: dense,\n    disabled: disabled\n  }, label), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    TextArea.propTypes = {\n      id: PropTypes.string.isRequired,\n      style: PropTypes.object,\n      className: PropTypes.string,\n      areaStyle: PropTypes.object,\n      areaClassName: PropTypes.string,\n      labelStyle: PropTypes.object,\n      labelClassName: PropTypes.string,\n      label: PropTypes.node,\n      value: PropTypes.string,\n      defaultValue: PropTypes.string,\n      theme: PropTypes.oneOf([\"none\", \"underline\", \"filled\", \"outline\"]),\n      dense: PropTypes.bool,\n      error: PropTypes.bool,\n      inline: PropTypes.bool,\n      disabled: PropTypes.bool,\n      placeholder: PropTypes.string,\n      underlineDirection: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n      leftChildren: PropTypes.node,\n      rightChildren: PropTypes.node,\n      isLeftAddon: PropTypes.bool,\n      isRightAddon: PropTypes.bool,\n      animate: PropTypes.bool,\n      rows: PropTypes.number,\n      maxRows: PropTypes.number,\n      resize: PropTypes.oneOf([\"none\", \"auto\", \"horizontal\", \"vertical\", \"both\"]),\n      containerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n      onBlur: PropTypes.func,\n      onFocus: PropTypes.func,\n      onChange: PropTypes.func\n    };\n  } catch (e) {}\n}\n\nexport default TextArea;","map":{"version":3,"sources":["../../src/text-field/TextArea.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, useCallback, useState, useRef, } from \"react\";\nimport cn from \"classnames\";\nimport { bem, useEnsuredRef, useResizeObserver } from \"@react-md/utils\";\nimport FloatingLabel from \"../label/FloatingLabel\";\nimport useFocusState from \"../useFocusState\";\nimport TextFieldContainer from \"./TextFieldContainer\";\nimport useValuedState from \"./useValuedState\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nvar block = bem(\"rmd-textarea\");\nvar container = bem(\"rmd-textarea-container\");\nvar PADDING_VARIABLES = \"var(--rmd-form-text-padding-top, 0px) + var(--rmd-form-textarea-padding, 0px)\";\n// this is the default of 1.5rem line-height in the styles\nvar DEFAULT_LINE_HEIGHT = \"24\";\nvar TextArea = forwardRef(function TextArea(_a, forwardedRef) {\n    var style = _a.style, className = _a.className, areaStyle = _a.areaStyle, areaClassName = _a.areaClassName, containerRef = _a.containerRef, label = _a.label, labelStyle = _a.labelStyle, labelClassName = _a.labelClassName, _b = _a.rows, rows = _b === void 0 ? 2 : _b, _c = _a.maxRows, maxRows = _c === void 0 ? -1 : _c, _d = _a.resize, resize = _d === void 0 ? \"auto\" : _d, propTheme = _a.theme, _e = _a.dense, dense = _e === void 0 ? false : _e, _f = _a.inline, propInline = _f === void 0 ? false : _f, _g = _a.error, error = _g === void 0 ? false : _g, _h = _a.disabled, disabled = _h === void 0 ? false : _h, _j = _a.animate, animate = _j === void 0 ? true : _j, _k = _a.isLeftAddon, isLeftAddon = _k === void 0 ? true : _k, _l = _a.isRightAddon, isRightAddon = _l === void 0 ? true : _l, propUnderlineDirection = _a.underlineDirection, propOnBlur = _a.onBlur, propOnFocus = _a.onFocus, propOnChange = _a.onChange, leftChildren = _a.leftChildren, rightChildren = _a.rightChildren, props = __rest(_a, [\"style\", \"className\", \"areaStyle\", \"areaClassName\", \"containerRef\", \"label\", \"labelStyle\", \"labelClassName\", \"rows\", \"maxRows\", \"resize\", \"theme\", \"dense\", \"inline\", \"error\", \"disabled\", \"animate\", \"isLeftAddon\", \"isRightAddon\", \"underlineDirection\", \"onBlur\", \"onFocus\", \"onChange\", \"leftChildren\", \"rightChildren\"]);\n    var id = props.id, value = props.value, defaultValue = props.defaultValue;\n    var _m = useFormTheme({\n        theme: propTheme,\n        underlineDirection: propUnderlineDirection,\n    }), theme = _m.theme, underlineDirection = _m.underlineDirection;\n    var _o = useFocusState({\n        onBlur: propOnBlur,\n        onFocus: propOnFocus,\n    }), focused = _o[0], onFocus = _o[1], onBlur = _o[2];\n    var _p = useState(), height = _p[0], setHeight = _p[1];\n    if (resize !== \"auto\" && typeof height === \"number\") {\n        setHeight(undefined);\n    }\n    var maskRef = useRef(null);\n    var _q = useState(false), scrollable = _q[0], setScrollable = _q[1];\n    var updateHeight = useCallback(function () {\n        var mask = maskRef.current;\n        if (!mask) {\n            return;\n        }\n        var nextHeight = mask.scrollHeight;\n        if (maxRows > 0) {\n            var lineHeight = parseFloat(window.getComputedStyle(mask).lineHeight || DEFAULT_LINE_HEIGHT);\n            var maxHeight = maxRows * lineHeight;\n            nextHeight = Math.min(maxHeight, nextHeight);\n            // only want the textarea to be scrollable if there's a limit on the rows\n            // since it'll flash the scrollbar on most OS during the height transition\n            if (nextHeight === maxHeight && !scrollable) {\n                setScrollable(true);\n            }\n            else if (nextHeight !== maxHeight && scrollable) {\n                setScrollable(false);\n            }\n        }\n        if (height !== nextHeight) {\n            setHeight(nextHeight);\n        }\n    }, [height, maxRows, scrollable]);\n    // the window can be resized while there is text inside the textarea so need to\n    // recalculate the height when the width changes as well.\n    var _r = useResizeObserver(updateHeight, {\n        ref: maskRef,\n        disableHeight: true,\n    }), maskRefHandler = _r[1];\n    var _s = useValuedState({\n        value: value,\n        defaultValue: defaultValue,\n        onChange: function (event) {\n            var mask = maskRef.current;\n            if (propOnChange) {\n                propOnChange(event);\n            }\n            if (!mask || resize !== \"auto\") {\n                return;\n            }\n            // to get the height transition to work, you have to set the height on:\n            // - the main container element (including padding) that has the height\n            //    transition enabled\n            // - a child div wrapper (without padding) that has the height transition\n            //    enabled\n            // - the textarea element (without padding) and without a height transition\n            //\n            // if it isn't done this way, the height transition will look weird since\n            // the text will be fixed to the bottom of the area and more text at the top\n            // will become visible as the height transition completes. applying the\n            // transition on the two parent elements work because:\n            // - the height is set immediately on the text field so it expands to show all\n            //    the text\n            // - the height is correctly applied to both parent elements, but their height\n            //    haven't fully been adjusted due to the animation\n            // - the parent divs have overflow visible by default, so the textarea's text\n            //    will expand past the boundaries of the divs and not cause the upwards\n            //    animation weirdness.\n            mask.value = event.currentTarget.value;\n            updateHeight();\n        },\n    }), valued = _s[0], onChange = _s[1];\n    var _t = useEnsuredRef(forwardedRef), ref = _t[0], refHandler = _t[1];\n    // the container element adds some padding so that the content can scroll and\n    // not be covered by the floating label. unfortunately, this means that the entire\n    // container is no longer clickable to focus the input. This is used to add that\n    // functionality back.\n    var handleClick = useCallback(function (event) {\n        if (ref.current && event.target === event.currentTarget) {\n            ref.current.focus();\n        }\n    }, [ref]);\n    var area = (React.createElement(\"textarea\", __assign({}, props, { ref: refHandler, rows: rows, disabled: disabled, onFocus: onFocus, onBlur: onBlur, onChange: onChange, style: __assign(__assign({}, areaStyle), { height: height }), className: cn(block({\n            scrollable: scrollable || resize === \"none\",\n            floating: label && theme !== \"none\",\n            rh: resize === \"horizontal\",\n            rv: resize === \"vertical\",\n            rn: resize === \"auto\" || resize === \"none\",\n        }), areaClassName) })));\n    var children = area;\n    if (resize === \"auto\") {\n        children = (React.createElement(\"div\", { style: { height: height }, className: container(\"inner\", { animate: animate }) },\n            area,\n            React.createElement(\"textarea\", { \"aria-hidden\": true, defaultValue: value || defaultValue, id: id + \"-mask\", ref: maskRefHandler, readOnly: true, rows: rows, tabIndex: -1, style: areaStyle, className: cn(block({\n                    rn: true,\n                    mask: true,\n                    floating: label && theme !== \"none\",\n                }), areaClassName) })));\n    }\n    var inline = propInline;\n    if (resize === \"horizontal\" || resize === \"both\") {\n        // have to force it inline or else you won't be able to resize\n        // it horizontally.\n        inline = true;\n    }\n    return (React.createElement(TextFieldContainer, { style: __assign(__assign({}, style), { height: height\n                ? \"calc(\" + PADDING_VARIABLES + \" + \" + height + \"px)\"\n                : undefined }), className: cn(container({\n            animate: animate && resize === \"auto\",\n            cursor: !disabled,\n        }), className), ref: containerRef, theme: theme, error: error, active: focused, label: !!label, dense: dense, inline: inline, disabled: disabled, isLeftAddon: isLeftAddon, isRightAddon: isRightAddon, leftChildren: leftChildren, rightChildren: rightChildren, underlineDirection: underlineDirection, onClick: !disabled ? handleClick : undefined },\n        React.createElement(FloatingLabel, { style: labelStyle, className: labelClassName, htmlFor: id, error: error, active: focused, floating: focused || valued, valued: valued, dense: dense, disabled: disabled }, label),\n        children));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        TextArea.propTypes = {\n            id: PropTypes.string.isRequired,\n            style: PropTypes.object,\n            className: PropTypes.string,\n            areaStyle: PropTypes.object,\n            areaClassName: PropTypes.string,\n            labelStyle: PropTypes.object,\n            labelClassName: PropTypes.string,\n            label: PropTypes.node,\n            value: PropTypes.string,\n            defaultValue: PropTypes.string,\n            theme: PropTypes.oneOf([\"none\", \"underline\", \"filled\", \"outline\"]),\n            dense: PropTypes.bool,\n            error: PropTypes.bool,\n            inline: PropTypes.bool,\n            disabled: PropTypes.bool,\n            placeholder: PropTypes.string,\n            underlineDirection: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n            leftChildren: PropTypes.node,\n            rightChildren: PropTypes.node,\n            isLeftAddon: PropTypes.bool,\n            isRightAddon: PropTypes.bool,\n            animate: PropTypes.bool,\n            rows: PropTypes.number,\n            maxRows: PropTypes.number,\n            resize: PropTypes.oneOf([\n                \"none\",\n                \"auto\",\n                \"horizontal\",\n                \"vertical\",\n                \"both\",\n            ]),\n            containerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n            onBlur: PropTypes.func,\n            onFocus: PropTypes.func,\n            onChange: PropTypes.func,\n        };\n    }\n    catch (e) { }\n}\nexport default TextArea;\n//# sourceMappingURL=TextArea.js.map"]},"metadata":{},"sourceType":"module"}