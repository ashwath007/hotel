{"ast":null,"code":"import useTouchDetection from \"./useTouchDetection\";\nimport useKeyboardDetection from \"./useKeyboardDetection\";\n/**\n * This hook combines the touch and keyboard detection hooks and returns a\n * string of the current interaction mode of the app/user.\n *\n * @private\n */\n\nexport default function useModeDetection() {\n  var touch = useTouchDetection();\n  var keyboard = useKeyboardDetection();\n\n  if (touch) {\n    return \"touch\";\n  }\n\n  if (keyboard) {\n    return \"keyboard\";\n  }\n\n  return \"mouse\";\n}","map":{"version":3,"sources":["../../src/interaction/useModeDetection.ts"],"names":[],"mappings":"AAAA,OAAO,iBAAP,MAA8B,qBAA9B;AACA,OAAO,oBAAP,MAAiC,wBAAjC;AASA;;;;;;;AAMA,eAAc,SAAU,gBAAV,GAA0B;AACtC,MAAM,KAAK,GAAG,iBAAiB,EAA/B;AACA,MAAM,QAAQ,GAAG,oBAAoB,EAArC;;AAEA,MAAI,KAAJ,EAAW;AACT,WAAO,OAAP;AACD;;AAED,MAAI,QAAJ,EAAc;AACZ,WAAO,UAAP;AACD;;AAED,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import useTouchDetection from \"./useTouchDetection\";\nimport useKeyboardDetection from \"./useKeyboardDetection\";\n/**\n * This hook combines the touch and keyboard detection hooks and returns a\n * string of the current interaction mode of the app/user.\n *\n * @private\n */\nexport default function useModeDetection() {\n    var touch = useTouchDetection();\n    var keyboard = useKeyboardDetection();\n    if (touch) {\n        return \"touch\";\n    }\n    if (keyboard) {\n        return \"keyboard\";\n    }\n    return \"mouse\";\n}\n//# sourceMappingURL=useModeDetection.js.map"]},"metadata":{},"sourceType":"module"}