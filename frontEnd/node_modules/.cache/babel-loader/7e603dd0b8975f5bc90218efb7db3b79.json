{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useRefCache } from \"@react-md/utils\";\n/**\n * This hook will call the `onShow` and `onHide` functions as needed based on\n * the current interaction mode and the visibility of the tooltip.\n *\n * @private\n */\n\nexport default function useVisiblityChange(_a) {\n  var onShow = _a.onShow,\n      onHide = _a.onHide,\n      visible = _a.visible,\n      mode = _a.mode;\n  var handlers = useRefCache({\n    onShow: onShow,\n    onHide: onHide\n  });\n  useEffect(function () {\n    if (!visible || mode === null) {\n      return;\n    }\n\n    var _a = handlers.current,\n        onShow = _a.onShow,\n        onHide = _a.onHide;\n\n    if (onShow) {\n      onShow(mode);\n    }\n\n    return function () {\n      if (onHide) {\n        onHide();\n      }\n    }; // only want to trigger on visibility changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible]);\n}","map":{"version":3,"sources":["../src/useVisibilityChange.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,OAA1B;AACA,SAAS,WAAT,QAAiD,iBAAjD;AAqBA;;;;;;;AAMA,eAAc,SAAU,kBAAV,CAA6B,EAA7B,EAKY;MAJxB,MAAM,GAAA,EAAA,CAAA,M;MACN,MAAM,GAAA,EAAA,CAAA,M;MACN,OAAO,GAAA,EAAA,CAAA,O;MACP,IAAI,GAAA,EAAA,CAAA,I;AAEJ,MAAM,QAAQ,GAAG,WAAW,CAAC;AAAE,IAAA,MAAM,EAAA,MAAR;AAAU,IAAA,MAAM,EAAA;AAAhB,GAAD,CAA5B;AAEA,EAAA,SAAS,CAAC,YAAA;AACR,QAAI,CAAC,OAAD,IAAY,IAAI,KAAK,IAAzB,EAA+B;AAC7B;AACD;;AAEK,QAAA,EAAA,GAAqB,QAAQ,CAAC,OAA9B;AAAA,QAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,QAAU,MAAM,GAAA,EAAA,CAAA,MAAhB;;AACN,QAAI,MAAJ,EAAY;AACV,MAAA,MAAM,CAAC,IAAD,CAAN;AACD;;AAED,WAAO,YAAA;AACL,UAAI,MAAJ,EAAY;AACV,QAAA,MAAM;AACP;AACF,KAJD,CAVQ,CAeR;AACA;AACD,GAjBQ,EAiBN,CAAC,OAAD,CAjBM,CAAT;AAkBD","sourceRoot":"","sourcesContent":["import { useEffect } from \"react\";\nimport { useRefCache } from \"@react-md/utils\";\n/**\n * This hook will call the `onShow` and `onHide` functions as needed based on\n * the current interaction mode and the visibility of the tooltip.\n *\n * @private\n */\nexport default function useVisiblityChange(_a) {\n    var onShow = _a.onShow, onHide = _a.onHide, visible = _a.visible, mode = _a.mode;\n    var handlers = useRefCache({ onShow: onShow, onHide: onHide });\n    useEffect(function () {\n        if (!visible || mode === null) {\n            return;\n        }\n        var _a = handlers.current, onShow = _a.onShow, onHide = _a.onHide;\n        if (onShow) {\n            onShow(mode);\n        }\n        return function () {\n            if (onHide) {\n                onHide();\n            }\n        };\n        // only want to trigger on visibility changes\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [visible]);\n}\n//# sourceMappingURL=useVisibilityChange.js.map"]},"metadata":{},"sourceType":"module"}