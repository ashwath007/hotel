{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useActionClassName } from \"@react-md/app-bar\";\nimport { Button } from \"@react-md/button\";\nimport { useIcon } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport ToggleChildren from \"./ToggleChildren\";\nvar block = bem(\"rmd-menu-button\");\n/**\n * This component is an extension of the `Button` component that will:\n * - apply the required a11y prosp for a menu button\n * - dynamically add a dropdown icon after the button contents\n */\n\nvar MenuButton = forwardRef(function MenuButton(_a, ref) {\n  var _b;\n\n  var _c = _a[\"aria-haspopup\"],\n      ariaHasPopup = _c === void 0 ? \"menu\" : _c,\n      className = _a.className,\n      visible = _a.visible,\n      children = _a.children,\n      propDropdownIcon = _a.dropdownIcon,\n      _d = _a.disableDropdownIcon,\n      disableDropdownIcon = _d === void 0 ? false : _d,\n      _e = _a.first,\n      first = _e === void 0 ? false : _e,\n      _f = _a.last,\n      last = _f === void 0 ? false : _f,\n      inheritColor = _a.inheritColor,\n      _g = _a.asAppBarAction,\n      asAppBarAction = _g === void 0 ? false : _g,\n      props = __rest(_a, [\"aria-haspopup\", \"className\", \"visible\", \"children\", \"dropdownIcon\", \"disableDropdownIcon\", \"first\", \"last\", \"inheritColor\", \"asAppBarAction\"]);\n\n  var buttonType = props.buttonType;\n  var dropdownIcon = useIcon(\"dropdown\", propDropdownIcon);\n  var actionClassName = useActionClassName({\n    first: first,\n    last: last,\n    inheritColor: inheritColor\n  });\n  return React.createElement(Button, __assign({}, props, {\n    ref: ref,\n    \"aria-haspopup\": ariaHasPopup,\n    \"aria-expanded\": visible ? \"true\" : undefined,\n    className: cn(block(), (_b = {}, _b[actionClassName] = first || last || inheritColor || asAppBarAction, _b), className)\n  }), React.createElement(ToggleChildren, {\n    visible: visible,\n    dropdownIcon: dropdownIcon,\n    disableDropdownIcon: disableDropdownIcon || buttonType === \"icon\"\n  }, children));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    MenuButton.propTypes = {\n      \"aria-haspopup\": PropTypes.oneOf([\"menu\", \"true\", true]),\n      id: PropTypes.string.isRequired,\n      visible: PropTypes.bool.isRequired,\n      dropdownIcon: PropTypes.node,\n      disableDropdownIcon: PropTypes.bool,\n      className: PropTypes.string,\n      children: PropTypes.node,\n      buttonType: PropTypes.oneOf([\"text\", \"icon\"]),\n      first: PropTypes.bool,\n      last: PropTypes.bool,\n      inheritColor: PropTypes.bool,\n      asAppBarAction: PropTypes.bool\n    };\n  } catch (e) {}\n}\n\nexport default MenuButton;","map":{"version":3,"sources":["../src/MenuButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useActionClassName, } from \"@react-md/app-bar\";\nimport { Button } from \"@react-md/button\";\nimport { useIcon } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport ToggleChildren from \"./ToggleChildren\";\nvar block = bem(\"rmd-menu-button\");\n/**\n * This component is an extension of the `Button` component that will:\n * - apply the required a11y prosp for a menu button\n * - dynamically add a dropdown icon after the button contents\n */\nvar MenuButton = forwardRef(function MenuButton(_a, ref) {\n    var _b;\n    var _c = _a[\"aria-haspopup\"], ariaHasPopup = _c === void 0 ? \"menu\" : _c, className = _a.className, visible = _a.visible, children = _a.children, propDropdownIcon = _a.dropdownIcon, _d = _a.disableDropdownIcon, disableDropdownIcon = _d === void 0 ? false : _d, _e = _a.first, first = _e === void 0 ? false : _e, _f = _a.last, last = _f === void 0 ? false : _f, inheritColor = _a.inheritColor, _g = _a.asAppBarAction, asAppBarAction = _g === void 0 ? false : _g, props = __rest(_a, [\"aria-haspopup\", \"className\", \"visible\", \"children\", \"dropdownIcon\", \"disableDropdownIcon\", \"first\", \"last\", \"inheritColor\", \"asAppBarAction\"]);\n    var buttonType = props.buttonType;\n    var dropdownIcon = useIcon(\"dropdown\", propDropdownIcon);\n    var actionClassName = useActionClassName({ first: first, last: last, inheritColor: inheritColor });\n    return (React.createElement(Button, __assign({}, props, { ref: ref, \"aria-haspopup\": ariaHasPopup, \"aria-expanded\": visible ? \"true\" : undefined, className: cn(block(), (_b = {},\n            _b[actionClassName] = first || last || inheritColor || asAppBarAction,\n            _b), className) }),\n        React.createElement(ToggleChildren, { visible: visible, dropdownIcon: dropdownIcon, disableDropdownIcon: disableDropdownIcon || buttonType === \"icon\" }, children)));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        MenuButton.propTypes = {\n            \"aria-haspopup\": PropTypes.oneOf([\"menu\", \"true\", true]),\n            id: PropTypes.string.isRequired,\n            visible: PropTypes.bool.isRequired,\n            dropdownIcon: PropTypes.node,\n            disableDropdownIcon: PropTypes.bool,\n            className: PropTypes.string,\n            children: PropTypes.node,\n            buttonType: PropTypes.oneOf([\"text\", \"icon\"]),\n            first: PropTypes.bool,\n            last: PropTypes.bool,\n            inheritColor: PropTypes.bool,\n            asAppBarAction: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\nexport default MenuButton;\n//# sourceMappingURL=MenuButton.js.map"]},"metadata":{},"sourceType":"module"}