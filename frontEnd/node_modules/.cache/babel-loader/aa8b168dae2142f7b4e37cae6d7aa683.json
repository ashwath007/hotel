{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * This is the root card component that should be used along side all the other\n * card parts. It adds some general styles and elevation to help show\n * prominence.\n */\n\nvar Card = forwardRef(function Card(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a.raiseable,\n      raiseable = _b === void 0 ? false : _b,\n      _c = _a.fullWidth,\n      fullWidth = _c === void 0 ? false : _c,\n      _d = _a.bordered,\n      bordered = _d === void 0 ? false : _d,\n      props = __rest(_a, [\"className\", \"children\", \"raiseable\", \"fullWidth\", \"bordered\"]);\n\n  return React.createElement(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      bordered: bordered,\n      shadowed: !bordered,\n      raiseable: !bordered && raiseable,\n      \"full-width\": fullWidth\n    }), className)\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Card.propTypes = {\n      className: PropTypes.string,\n      bordered: PropTypes.bool,\n      raiseable: PropTypes.bool,\n      fullWidth: PropTypes.bool,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}\n\nexport default Card;","map":{"version":3,"sources":["../src/Card.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkD,OAAlD;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAsBA,IAAM,KAAK,GAAG,GAAG,CAAC,UAAD,CAAjB;AAEA;;;;;;AAKA,IAAM,IAAI,GAAG,UAAU,CAA4B,SAAS,IAAT,CACjD,EADiD,EASjD,GATiD,EAS9C;AAPD,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,QAAQ,GAAA,EAAA,CAAA,QADR;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,SAFA;AAAA,MAEA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAFjB;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,SAHA;AAAA,MAGA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAHjB;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,QAJA;AAAA,MAIA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAJhB;AAAA,MAKG,KAAK,GAAA,MAAA,CAAA,EAAA,EANV,CAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,CAMU,CALR;;AASF,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CACX,KAAK,CAAC;AACJ,MAAA,QAAQ,EAAA,QADJ;AAEJ,MAAA,QAAQ,EAAE,CAAC,QAFP;AAGJ,MAAA,SAAS,EAAE,CAAC,QAAD,IAAa,SAHpB;AAIJ,oBAAc;AAJV,KAAD,CADM,EAOX,SAPW;AAFJ,GADX,CAAA,EAaG,QAbH,CADF;AAiBD,CA5BsB,CAAvB;;AA8BA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,IAAI,CAAC,SAAL,GAAiB;AACf,MAAA,SAAS,EAAE,SAAS,CAAC,MADN;AAEf,MAAA,QAAQ,EAAE,SAAS,CAAC,IAFL;AAGf,MAAA,SAAS,EAAE,SAAS,CAAC,IAHN;AAIf,MAAA,SAAS,EAAE,SAAS,CAAC,IAJN;AAKf,MAAA,QAAQ,EAAE,SAAS,CAAC;AALL,KAAjB;AAOD,GAVD,CAUE,OAAO,CAAP,EAAU,CAAE;AACf;;AAED,eAAe,IAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * This is the root card component that should be used along side all the other\n * card parts. It adds some general styles and elevation to help show\n * prominence.\n */\nvar Card = forwardRef(function Card(_a, ref) {\n    var className = _a.className, children = _a.children, _b = _a.raiseable, raiseable = _b === void 0 ? false : _b, _c = _a.fullWidth, fullWidth = _c === void 0 ? false : _c, _d = _a.bordered, bordered = _d === void 0 ? false : _d, props = __rest(_a, [\"className\", \"children\", \"raiseable\", \"fullWidth\", \"bordered\"]);\n    return (React.createElement(\"div\", __assign({}, props, { ref: ref, className: cn(block({\n            bordered: bordered,\n            shadowed: !bordered,\n            raiseable: !bordered && raiseable,\n            \"full-width\": fullWidth,\n        }), className) }), children));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Card.propTypes = {\n            className: PropTypes.string,\n            bordered: PropTypes.bool,\n            raiseable: PropTypes.bool,\n            fullWidth: PropTypes.bool,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\nexport default Card;\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}