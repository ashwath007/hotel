{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */\n\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_OVERLAY_TIMEOUT, DEFAULT_OVERLAY_CLASSNAMES } from \"./constants\";\nvar block = bem(\"rmd-overlay\");\n/**\n * The `Overlay` component is a simple component used to render a full page\n * overlay in the page with an enter and exit animation. If there are overflow\n * issues or you need to portal the overlay to a different area within your app,\n * you should use the `OverlayPortal` component instead.\n */\n\nvar Overlay = forwardRef(function Overlay(_a, ref) {\n  var className = _a.className,\n      visible = _a.visible,\n      _b = _a.hidden,\n      hidden = _b === void 0 ? false : _b,\n      _c = _a.clickable,\n      clickable = _c === void 0 ? true : _c,\n      _d = _a.timeout,\n      timeout = _d === void 0 ? DEFAULT_OVERLAY_TIMEOUT : _d,\n      _e = _a.classNames,\n      classNames = _e === void 0 ? DEFAULT_OVERLAY_CLASSNAMES : _e,\n      children = _a.children,\n      _f = _a.mountOnEnter,\n      mountOnEnter = _f === void 0 ? true : _f,\n      _g = _a.unmountOnExit,\n      unmountOnExit = _g === void 0 ? true : _g,\n      onRequestClose = _a.onRequestClose,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExit = _a.onExit,\n      onExiting = _a.onExiting,\n      onExited = _a.onExited,\n      portal = _a.portal,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      _h = _a.tabIndex,\n      tabIndex = _h === void 0 ? -1 : _h,\n      props = __rest(_a, [\"className\", \"visible\", \"hidden\", \"clickable\", \"timeout\", \"classNames\", \"children\", \"mountOnEnter\", \"unmountOnExit\", \"onRequestClose\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"portal\", \"portalInto\", \"portalIntoId\", \"tabIndex\"]);\n\n  return React.createElement(ConditionalPortal, {\n    portal: portal,\n    portalInto: portalInto,\n    portalIntoId: portalIntoId\n  }, React.createElement(CSSTransition, {\n    appear: true,\n    in: visible,\n    classNames: hidden ? \"\" : classNames,\n    timeout: hidden ? 0 : timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited\n  }, function (state) {\n    return React.createElement(\"span\", __assign({}, props, {\n      ref: ref,\n      className: cn(block({\n        // have to manually set the active state here since react-transition-group doesn't\n        // clone in the transition `classNames` and if the overlay re-renders while the\n        // animation has finished, the active className will disappear\n        active: !hidden && state === \"entered\",\n        visible: visible,\n        clickable: clickable\n      }), className),\n      onClick: onRequestClose,\n      tabIndex: tabIndex\n    }), children);\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Overlay.propTypes = {\n      className: PropTypes.string,\n      classNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        appear: PropTypes.string,\n        appearActive: PropTypes.string,\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string,\n        exitDone: PropTypes.string\n      })]),\n      timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      mountOnEnter: PropTypes.bool,\n      unmountOnExit: PropTypes.bool,\n      onEnter: PropTypes.func,\n      onEntering: PropTypes.func,\n      onEntered: PropTypes.func,\n      onExit: PropTypes.func,\n      onExiting: PropTypes.func,\n      onExited: PropTypes.func,\n      portal: PropTypes.bool,\n      portalInto: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n      portalIntoId: PropTypes.string,\n      children: PropTypes.node,\n      tabIndex: PropTypes.number,\n      visible: PropTypes.bool.isRequired,\n      onRequestClose: PropTypes.func.isRequired,\n      hidden: PropTypes.bool,\n      clickable: PropTypes.bool\n    };\n  } catch (e) {}\n}\n\nexport default Overlay;","map":{"version":3,"sources":["../src/Overlay.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { ConditionalPortal, } from \"@react-md/portal\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_OVERLAY_TIMEOUT, DEFAULT_OVERLAY_CLASSNAMES, } from \"./constants\";\nvar block = bem(\"rmd-overlay\");\n/**\n * The `Overlay` component is a simple component used to render a full page\n * overlay in the page with an enter and exit animation. If there are overflow\n * issues or you need to portal the overlay to a different area within your app,\n * you should use the `OverlayPortal` component instead.\n */\nvar Overlay = forwardRef(function Overlay(_a, ref) {\n    var className = _a.className, visible = _a.visible, _b = _a.hidden, hidden = _b === void 0 ? false : _b, _c = _a.clickable, clickable = _c === void 0 ? true : _c, _d = _a.timeout, timeout = _d === void 0 ? DEFAULT_OVERLAY_TIMEOUT : _d, _e = _a.classNames, classNames = _e === void 0 ? DEFAULT_OVERLAY_CLASSNAMES : _e, children = _a.children, _f = _a.mountOnEnter, mountOnEnter = _f === void 0 ? true : _f, _g = _a.unmountOnExit, unmountOnExit = _g === void 0 ? true : _g, onRequestClose = _a.onRequestClose, onEnter = _a.onEnter, onEntering = _a.onEntering, onEntered = _a.onEntered, onExit = _a.onExit, onExiting = _a.onExiting, onExited = _a.onExited, portal = _a.portal, portalInto = _a.portalInto, portalIntoId = _a.portalIntoId, _h = _a.tabIndex, tabIndex = _h === void 0 ? -1 : _h, props = __rest(_a, [\"className\", \"visible\", \"hidden\", \"clickable\", \"timeout\", \"classNames\", \"children\", \"mountOnEnter\", \"unmountOnExit\", \"onRequestClose\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"portal\", \"portalInto\", \"portalIntoId\", \"tabIndex\"]);\n    return (React.createElement(ConditionalPortal, { portal: portal, portalInto: portalInto, portalIntoId: portalIntoId },\n        React.createElement(CSSTransition, { appear: true, in: visible, classNames: hidden ? \"\" : classNames, timeout: hidden ? 0 : timeout, mountOnEnter: mountOnEnter, unmountOnExit: unmountOnExit, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExit: onExit, onExiting: onExiting, onExited: onExited }, function (state) { return (React.createElement(\"span\", __assign({}, props, { ref: ref, className: cn(block({\n                // have to manually set the active state here since react-transition-group doesn't\n                // clone in the transition `classNames` and if the overlay re-renders while the\n                // animation has finished, the active className will disappear\n                active: !hidden && state === \"entered\",\n                visible: visible,\n                clickable: clickable,\n            }), className), onClick: onRequestClose, tabIndex: tabIndex }), children)); })));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Overlay.propTypes = {\n            className: PropTypes.string,\n            classNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    appear: PropTypes.string,\n                    appearActive: PropTypes.string,\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                    exitDone: PropTypes.string,\n                }),\n            ]),\n            timeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            mountOnEnter: PropTypes.bool,\n            unmountOnExit: PropTypes.bool,\n            onEnter: PropTypes.func,\n            onEntering: PropTypes.func,\n            onEntered: PropTypes.func,\n            onExit: PropTypes.func,\n            onExiting: PropTypes.func,\n            onExited: PropTypes.func,\n            portal: PropTypes.bool,\n            portalInto: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.func,\n                PropTypes.object,\n            ]),\n            portalIntoId: PropTypes.string,\n            children: PropTypes.node,\n            tabIndex: PropTypes.number,\n            visible: PropTypes.bool.isRequired,\n            onRequestClose: PropTypes.func.isRequired,\n            hidden: PropTypes.bool,\n            clickable: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}