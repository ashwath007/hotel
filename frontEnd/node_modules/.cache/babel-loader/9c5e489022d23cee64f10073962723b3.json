{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { Overlay } from \"@react-md/overlay\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { bem, FocusContainer, useCloseOnEscape, useScrollLock } from \"@react-md/utils\";\nimport useNestedDialogFixes from \"./useNestedDialogFixes\"; // used to disable the overlay click-to-close functionality when the `modal` prop is enabled.\n\nvar noop = function () {};\n\nvar block = bem(\"rmd-dialog\");\nvar DEFAULT_DIALOG_CLASSNAMES = {\n  appear: \"rmd-dialog--enter\",\n  appearActive: \"rmd-dialog--enter-active\",\n  enter: \"rmd-dialog--enter\",\n  enterActive: \"rmd-dialog--enter-active\",\n  exit: \"rmd-dialog--exit\",\n  exitActive: \"rmd-dialog--exit-active\"\n};\nvar DEFAULT_DIALOG_TIMEOUT = {\n  enter: 200,\n  exit: 150\n};\nvar Dialog = forwardRef(function Dialog(_a, ref) {\n  var _b = _a.component,\n      component = _b === void 0 ? \"div\" : _b,\n      _c = _a.tabIndex,\n      tabIndex = _c === void 0 ? -1 : _c,\n      children = _a.children,\n      className = _a.className,\n      containerStyle = _a.containerStyle,\n      containerClassName = _a.containerClassName,\n      propOverlay = _a.overlay,\n      overlayStyle = _a.overlayStyle,\n      overlayClassName = _a.overlayClassName,\n      _d = _a.overlayHidden,\n      overlayHidden = _d === void 0 ? false : _d,\n      visible = _a.visible,\n      onRequestClose = _a.onRequestClose,\n      _e = _a.forceContainer,\n      forceContainer = _e === void 0 ? false : _e,\n      _f = _a.defaultFocus,\n      defaultFocus = _f === void 0 ? \"first\" : _f,\n      _g = _a.portal,\n      portal = _g === void 0 ? true : _g,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      _h = _a.appear,\n      appear = _h === void 0 ? false : _h,\n      _j = _a.enter,\n      enter = _j === void 0 ? true : _j,\n      _k = _a.exit,\n      exit = _k === void 0 ? true : _k,\n      _l = _a.disableTransition,\n      disableTransition = _l === void 0 ? false : _l,\n      _m = _a.classNames,\n      classNames = _m === void 0 ? DEFAULT_DIALOG_CLASSNAMES : _m,\n      _o = _a.timeout,\n      timeout = _o === void 0 ? DEFAULT_DIALOG_TIMEOUT : _o,\n      _p = _a.mountOnEnter,\n      mountOnEnter = _p === void 0 ? true : _p,\n      _q = _a.unmountOnExit,\n      unmountOnExit = _q === void 0 ? true : _q,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExit = _a.onExit,\n      onExiting = _a.onExiting,\n      onExited = _a.onExited,\n      _r = _a.modal,\n      modal = _r === void 0 ? false : _r,\n      _s = _a.role,\n      role = _s === void 0 ? \"dialog\" : _s,\n      _t = _a.type,\n      type = _t === void 0 ? \"centered\" : _t,\n      _u = _a.disableScrollLock,\n      disableScrollLock = _u === void 0 ? false : _u,\n      _v = _a.disableEscapeClose,\n      propDisableEscapeClose = _v === void 0 ? false : _v,\n      _w = _a.disableFocusContainer,\n      disableFocusContainer = _w === void 0 ? false : _w,\n      _x = _a.disableTabFocusWrap,\n      disableTabFocusWrap = _x === void 0 ? false : _x,\n      _y = _a.disableFocusOnMount,\n      disableFocusOnMount = _y === void 0 ? false : _y,\n      _z = _a.disableFocusOnUnmount,\n      disableFocusOnUnmount = _z === void 0 ? false : _z,\n      _0 = _a.disableNestedDialogFixes,\n      disableNestedDialogFixes = _0 === void 0 ? false : _0,\n      onKeyDown = _a.onKeyDown,\n      props = __rest(_a, [\"component\", \"tabIndex\", \"children\", \"className\", \"containerStyle\", \"containerClassName\", \"overlay\", \"overlayStyle\", \"overlayClassName\", \"overlayHidden\", \"visible\", \"onRequestClose\", \"forceContainer\", \"defaultFocus\", \"portal\", \"portalInto\", \"portalIntoId\", \"appear\", \"enter\", \"exit\", \"disableTransition\", \"classNames\", \"timeout\", \"mountOnEnter\", \"unmountOnExit\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"modal\", \"role\", \"type\", \"disableScrollLock\", \"disableEscapeClose\", \"disableFocusContainer\", \"disableTabFocusWrap\", \"disableFocusOnMount\", \"disableFocusOnUnmount\", \"disableNestedDialogFixes\", \"onKeyDown\"]);\n\n  var id = props.id;\n  var isNoneRole = role === \"none\";\n  var isFullPage = type === \"full-page\";\n  var isCentered = type === \"centered\";\n\n  var _1 = useNestedDialogFixes({\n    id: id,\n    visible: visible,\n    disabled: disableNestedDialogFixes,\n    disableEscapeClose: propDisableEscapeClose\n  }),\n      disableOverlay = _1.disableOverlay,\n      disableEscapeClose = _1.disableEscapeClose;\n\n  useScrollLock(visible && !isNoneRole && !disableScrollLock);\n  var overlayEl = null;\n\n  if (typeof propOverlay === \"boolean\" ? propOverlay : !isFullPage) {\n    // do not add the portal props to the overlay element since the portalling\n    // is handled in here. With how portals work, this would be rendered **after**\n    // the dialog instead of before which breaks some dialog styles\n    overlayEl = React.createElement(Overlay, {\n      id: id + \"-overlay\",\n      style: overlayStyle,\n      className: cn(\"rmd-dialog-overlay\", overlayClassName),\n      hidden: overlayHidden || disableOverlay,\n      visible: visible,\n      clickable: !modal,\n      onRequestClose: modal ? noop : onRequestClose\n    });\n  }\n\n  var dialog = React.createElement(FocusContainer, __assign({}, props, {\n    ref: ref,\n    role: isNoneRole ? undefined : role,\n    \"aria-modal\": !isNoneRole && !!overlayEl || undefined,\n    tabIndex: tabIndex,\n    component: component,\n    defaultFocus: defaultFocus,\n    disableTabFocusWrap: isNoneRole || disableTabFocusWrap || disableFocusContainer,\n    disableFocusOnMount: isNoneRole || disableFocusContainer || disableFocusOnMount,\n    disableFocusOnMountScroll: true,\n    disableFocusOnUnmount: isNoneRole || disableFocusContainer || disableFocusOnUnmount,\n    onKeyDown: useCloseOnEscape(onRequestClose, disableEscapeClose || isNoneRole, onKeyDown),\n    className: cn(block({\n      centered: isCentered,\n      \"full-page\": isFullPage\n    }), className)\n  }), children);\n\n  if (isCentered || forceContainer) {\n    // the additional container is only required when we don't have a full page dialog. it's just\n    // used to apply flex center to the dialog and add some margin\n    dialog = React.createElement(\"span\", {\n      id: id + \"-container\",\n      style: containerStyle,\n      className: cn(\"rmd-dialog-container\", containerClassName)\n    }, dialog);\n  }\n\n  return React.createElement(ConditionalPortal, {\n    portal: !isNoneRole && portal,\n    portalInto: portalInto,\n    portalIntoId: portalIntoId\n  }, React.createElement(React.Fragment, null, overlayEl, React.createElement(CSSTransition, {\n    appear: !disableTransition && appear,\n    enter: !disableTransition && enter,\n    exit: !disableTransition && exit,\n    in: visible,\n    classNames: classNames,\n    timeout: timeout,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, dialog)));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Dialog.propTypes = {\n      id: PropTypes.string.isRequired,\n      role: PropTypes.oneOf([\"dialog\", \"alertdialog\", \"menu\", \"none\"]),\n      \"aria-label\": PropTypes.string,\n      \"aria-labelledby\": PropTypes.string,\n      className: PropTypes.string,\n      type: PropTypes.oneOf([\"custom\", \"centered\", \"full-page\"]),\n      tabIndex: PropTypes.number,\n      modal: PropTypes.bool,\n      visible: PropTypes.bool.isRequired,\n      onRequestClose: PropTypes.func.isRequired,\n      mountOnEnter: PropTypes.bool,\n      unmountOnExit: PropTypes.bool,\n      overlay: PropTypes.bool,\n      overlayStyle: PropTypes.object,\n      overlayClassName: PropTypes.string,\n      overlayHidden: PropTypes.bool,\n      containerStyle: PropTypes.object,\n      containerClassName: PropTypes.string,\n      forceContainer: PropTypes.bool,\n      onKeyDown: PropTypes.func,\n      component: PropTypes.oneOf([\"div\", \"nav\"]),\n      children: PropTypes.node,\n      classNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        appear: PropTypes.string,\n        appearActive: PropTypes.string,\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string,\n        exitDone: PropTypes.string\n      })]),\n      timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      appear: PropTypes.bool,\n      enter: PropTypes.bool,\n      exit: PropTypes.bool,\n      disableTransition: PropTypes.bool,\n      onEnter: PropTypes.func,\n      onEntering: PropTypes.func,\n      onEntered: PropTypes.func,\n      onExit: PropTypes.func,\n      onExiting: PropTypes.func,\n      onExited: PropTypes.func,\n      portal: PropTypes.bool,\n      portalInto: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n      portalIntoId: PropTypes.string,\n      defaultFocus: PropTypes.oneOfType([PropTypes.oneOf([\"first\", \"last\"]), PropTypes.string]),\n      disableScrollLock: PropTypes.bool,\n      disableEscapeClose: PropTypes.bool,\n      disableFocusContainer: PropTypes.bool,\n      disableNestedDialogFixes: PropTypes.bool,\n      disableTabFocusWrap: PropTypes.bool,\n      disableFocusOnMount: PropTypes.bool,\n      disableFocusOnUnmount: PropTypes.bool\n    };\n  } catch (e) {}\n}\n\nexport default Dialog;","map":{"version":3,"sources":["../src/Dialog.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, } from \"react\";\nimport cn from \"classnames\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport { Overlay } from \"@react-md/overlay\";\nimport { ConditionalPortal, } from \"@react-md/portal\";\nimport { bem, FocusContainer, useCloseOnEscape, useScrollLock, } from \"@react-md/utils\";\nimport useNestedDialogFixes from \"./useNestedDialogFixes\";\n// used to disable the overlay click-to-close functionality when the `modal` prop is enabled.\nvar noop = function () { };\nvar block = bem(\"rmd-dialog\");\nvar DEFAULT_DIALOG_CLASSNAMES = {\n    appear: \"rmd-dialog--enter\",\n    appearActive: \"rmd-dialog--enter-active\",\n    enter: \"rmd-dialog--enter\",\n    enterActive: \"rmd-dialog--enter-active\",\n    exit: \"rmd-dialog--exit\",\n    exitActive: \"rmd-dialog--exit-active\",\n};\nvar DEFAULT_DIALOG_TIMEOUT = {\n    enter: 200,\n    exit: 150,\n};\nvar Dialog = forwardRef(function Dialog(_a, ref) {\n    var _b = _a.component, component = _b === void 0 ? \"div\" : _b, _c = _a.tabIndex, tabIndex = _c === void 0 ? -1 : _c, children = _a.children, className = _a.className, containerStyle = _a.containerStyle, containerClassName = _a.containerClassName, propOverlay = _a.overlay, overlayStyle = _a.overlayStyle, overlayClassName = _a.overlayClassName, _d = _a.overlayHidden, overlayHidden = _d === void 0 ? false : _d, visible = _a.visible, onRequestClose = _a.onRequestClose, _e = _a.forceContainer, forceContainer = _e === void 0 ? false : _e, _f = _a.defaultFocus, defaultFocus = _f === void 0 ? \"first\" : _f, _g = _a.portal, portal = _g === void 0 ? true : _g, portalInto = _a.portalInto, portalIntoId = _a.portalIntoId, _h = _a.appear, appear = _h === void 0 ? false : _h, _j = _a.enter, enter = _j === void 0 ? true : _j, _k = _a.exit, exit = _k === void 0 ? true : _k, _l = _a.disableTransition, disableTransition = _l === void 0 ? false : _l, _m = _a.classNames, classNames = _m === void 0 ? DEFAULT_DIALOG_CLASSNAMES : _m, _o = _a.timeout, timeout = _o === void 0 ? DEFAULT_DIALOG_TIMEOUT : _o, _p = _a.mountOnEnter, mountOnEnter = _p === void 0 ? true : _p, _q = _a.unmountOnExit, unmountOnExit = _q === void 0 ? true : _q, onEnter = _a.onEnter, onEntering = _a.onEntering, onEntered = _a.onEntered, onExit = _a.onExit, onExiting = _a.onExiting, onExited = _a.onExited, _r = _a.modal, modal = _r === void 0 ? false : _r, _s = _a.role, role = _s === void 0 ? \"dialog\" : _s, _t = _a.type, type = _t === void 0 ? \"centered\" : _t, _u = _a.disableScrollLock, disableScrollLock = _u === void 0 ? false : _u, _v = _a.disableEscapeClose, propDisableEscapeClose = _v === void 0 ? false : _v, _w = _a.disableFocusContainer, disableFocusContainer = _w === void 0 ? false : _w, _x = _a.disableTabFocusWrap, disableTabFocusWrap = _x === void 0 ? false : _x, _y = _a.disableFocusOnMount, disableFocusOnMount = _y === void 0 ? false : _y, _z = _a.disableFocusOnUnmount, disableFocusOnUnmount = _z === void 0 ? false : _z, _0 = _a.disableNestedDialogFixes, disableNestedDialogFixes = _0 === void 0 ? false : _0, onKeyDown = _a.onKeyDown, props = __rest(_a, [\"component\", \"tabIndex\", \"children\", \"className\", \"containerStyle\", \"containerClassName\", \"overlay\", \"overlayStyle\", \"overlayClassName\", \"overlayHidden\", \"visible\", \"onRequestClose\", \"forceContainer\", \"defaultFocus\", \"portal\", \"portalInto\", \"portalIntoId\", \"appear\", \"enter\", \"exit\", \"disableTransition\", \"classNames\", \"timeout\", \"mountOnEnter\", \"unmountOnExit\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"modal\", \"role\", \"type\", \"disableScrollLock\", \"disableEscapeClose\", \"disableFocusContainer\", \"disableTabFocusWrap\", \"disableFocusOnMount\", \"disableFocusOnUnmount\", \"disableNestedDialogFixes\", \"onKeyDown\"]);\n    var id = props.id;\n    var isNoneRole = role === \"none\";\n    var isFullPage = type === \"full-page\";\n    var isCentered = type === \"centered\";\n    var _1 = useNestedDialogFixes({\n        id: id,\n        visible: visible,\n        disabled: disableNestedDialogFixes,\n        disableEscapeClose: propDisableEscapeClose,\n    }), disableOverlay = _1.disableOverlay, disableEscapeClose = _1.disableEscapeClose;\n    useScrollLock(visible && !isNoneRole && !disableScrollLock);\n    var overlayEl = null;\n    if (typeof propOverlay === \"boolean\" ? propOverlay : !isFullPage) {\n        // do not add the portal props to the overlay element since the portalling\n        // is handled in here. With how portals work, this would be rendered **after**\n        // the dialog instead of before which breaks some dialog styles\n        overlayEl = (React.createElement(Overlay, { id: id + \"-overlay\", style: overlayStyle, className: cn(\"rmd-dialog-overlay\", overlayClassName), hidden: overlayHidden || disableOverlay, visible: visible, clickable: !modal, onRequestClose: modal ? noop : onRequestClose }));\n    }\n    var dialog = (React.createElement(FocusContainer, __assign({}, props, { ref: ref, role: isNoneRole ? undefined : role, \"aria-modal\": (!isNoneRole && !!overlayEl) || undefined, tabIndex: tabIndex, component: component, defaultFocus: defaultFocus, disableTabFocusWrap: isNoneRole || disableTabFocusWrap || disableFocusContainer, disableFocusOnMount: isNoneRole || disableFocusContainer || disableFocusOnMount, disableFocusOnMountScroll: true, disableFocusOnUnmount: isNoneRole || disableFocusContainer || disableFocusOnUnmount, onKeyDown: useCloseOnEscape(onRequestClose, disableEscapeClose || isNoneRole, onKeyDown), className: cn(block({\n            centered: isCentered,\n            \"full-page\": isFullPage,\n        }), className) }), children));\n    if (isCentered || forceContainer) {\n        // the additional container is only required when we don't have a full page dialog. it's just\n        // used to apply flex center to the dialog and add some margin\n        dialog = (React.createElement(\"span\", { id: id + \"-container\", style: containerStyle, className: cn(\"rmd-dialog-container\", containerClassName) }, dialog));\n    }\n    return (React.createElement(ConditionalPortal, { portal: !isNoneRole && portal, portalInto: portalInto, portalIntoId: portalIntoId },\n        React.createElement(React.Fragment, null,\n            overlayEl,\n            React.createElement(CSSTransition, { appear: !disableTransition && appear, enter: !disableTransition && enter, exit: !disableTransition && exit, in: visible, classNames: classNames, timeout: timeout, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExit: onExit, onExiting: onExiting, onExited: onExited, mountOnEnter: mountOnEnter, unmountOnExit: unmountOnExit }, dialog))));\n});\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Dialog.propTypes = {\n            id: PropTypes.string.isRequired,\n            role: PropTypes.oneOf([\"dialog\", \"alertdialog\", \"menu\", \"none\"]),\n            \"aria-label\": PropTypes.string,\n            \"aria-labelledby\": PropTypes.string,\n            className: PropTypes.string,\n            type: PropTypes.oneOf([\"custom\", \"centered\", \"full-page\"]),\n            tabIndex: PropTypes.number,\n            modal: PropTypes.bool,\n            visible: PropTypes.bool.isRequired,\n            onRequestClose: PropTypes.func.isRequired,\n            mountOnEnter: PropTypes.bool,\n            unmountOnExit: PropTypes.bool,\n            overlay: PropTypes.bool,\n            overlayStyle: PropTypes.object,\n            overlayClassName: PropTypes.string,\n            overlayHidden: PropTypes.bool,\n            containerStyle: PropTypes.object,\n            containerClassName: PropTypes.string,\n            forceContainer: PropTypes.bool,\n            onKeyDown: PropTypes.func,\n            component: PropTypes.oneOf([\"div\", \"nav\"]),\n            children: PropTypes.node,\n            classNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    appear: PropTypes.string,\n                    appearActive: PropTypes.string,\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                    exitDone: PropTypes.string,\n                }),\n            ]),\n            timeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            appear: PropTypes.bool,\n            enter: PropTypes.bool,\n            exit: PropTypes.bool,\n            disableTransition: PropTypes.bool,\n            onEnter: PropTypes.func,\n            onEntering: PropTypes.func,\n            onEntered: PropTypes.func,\n            onExit: PropTypes.func,\n            onExiting: PropTypes.func,\n            onExited: PropTypes.func,\n            portal: PropTypes.bool,\n            portalInto: PropTypes.oneOfType([\n                PropTypes.func,\n                PropTypes.string,\n                PropTypes.object,\n            ]),\n            portalIntoId: PropTypes.string,\n            defaultFocus: PropTypes.oneOfType([\n                PropTypes.oneOf([\"first\", \"last\"]),\n                PropTypes.string,\n            ]),\n            disableScrollLock: PropTypes.bool,\n            disableEscapeClose: PropTypes.bool,\n            disableFocusContainer: PropTypes.bool,\n            disableNestedDialogFixes: PropTypes.bool,\n            disableTabFocusWrap: PropTypes.bool,\n            disableFocusOnMount: PropTypes.bool,\n            disableFocusOnUnmount: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\nexport default Dialog;\n//# sourceMappingURL=Dialog.js.map"]},"metadata":{},"sourceType":"module"}